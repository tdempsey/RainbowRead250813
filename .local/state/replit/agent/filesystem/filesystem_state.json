{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nRainbow Map News is a full-stack LGBTQ+ news aggregation platform built with React, Express, and TypeScript. The application aggregates news content from multiple sources including RSS feeds and NewsAPI, providing a centralized hub for LGBTQ+ focused news stories. Users can search, filter, bookmark articles, and browse content by categories. The platform emphasizes community-focused content curation with features for liking articles and newsletter subscriptions.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# Recent Changes\n\n**Breaking News CSS Enhancement (January 13, 2025):**\n- Redesigned Breaking News component with professional color system\n- Added three variants: crimson (urgent), subtle (calm alert), amber (developing)\n- Implemented proper semantic HTML with role attributes and accessibility features\n- Added consistent pill badges, time stamps, and hover states\n- Enhanced dark mode support with appropriate shadow and color adjustments\n- Used CSS custom properties for maintainable theming system\n\n**HTML Entity Decoding (January 13, 2025):**\n- Enhanced RSS parser to decode all HTML entities including numeric ones (&#8220;, &#8221;, etc.)\n- Created HTML entity utility function for comprehensive client-side decoding\n- Updated article cards and hero section to display properly decoded titles and excerpts\n- Added support for both numeric (&#8220;) and hexadecimal (&#x201C;) HTML entities\n- Fixed common punctuation entities like smart quotes, em dashes, and ellipses\n\n**Footer Implementation (January 13, 2025):**\n- Created responsive footer component with mobile and desktop versions\n- Mobile footer (md:hidden): Shows simplified 4-link menu for app/mobile screens\n- Desktop footer (hidden md:block): Shows full menu with About, Quick Links, Community, and Legal sections\n- Added pride-themed social media links with hover animations\n- Footer automatically adapts to screen size for optimal user experience\n\n**Documentation (January 13, 2025):**\n- Created comprehensive README.md with full project documentation\n- Documented features, architecture, setup instructions, and usage guidelines\n- Added development guide with project structure and contribution instructions\n\n# System Architecture\n\n## Frontend Architecture\n\nThe client-side is built with React 18 and uses a modern component-based architecture:\n\n- **UI Framework**: React with TypeScript, using Vite as the build tool\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Routing**: Wouter for lightweight client-side routing\n- **Design System**: Custom pride-themed color palette with CSS variables for theming\n\n## Backend Architecture\n\nThe server follows a RESTful API pattern using Express.js:\n\n- **Framework**: Express.js with TypeScript\n- **Architecture Pattern**: Layered architecture with separate routes, services, and storage layers\n- **API Design**: RESTful endpoints for articles, bookmarks, categories, and RSS sources\n- **Content Aggregation**: Scheduled background services for fetching content from external sources\n- **Error Handling**: Centralized error handling middleware with structured error responses\n\n## Data Storage Solutions\n\nThe application uses a dual storage approach:\n\n- **Production Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Development Storage**: In-memory storage implementation for local development\n- **Database Schema**: Well-defined schema for articles, RSS sources, bookmarks, and categories\n- **Migration System**: Drizzle-kit for database migrations and schema management\n\n## Content Aggregation System\n\nAutomated content collection from multiple sources:\n\n- **RSS Parser**: Custom RSS feed parser for consuming various LGBTQ+ news sources\n- **NewsAPI Integration**: Integration with NewsAPI for broader news coverage\n- **Scheduler Service**: Background job scheduler for regular content updates (RSS every 30 minutes, NewsAPI every 2 hours)\n- **Content Categorization**: Automatic categorization and LGBTQ+ relevance detection using keyword matching\n\n## Search and Filtering\n\nAdvanced content discovery features:\n\n- **Full-text Search**: Server-side search implementation with query parameter support\n- **Category Filtering**: Multi-level filtering by predefined categories (Politics, Culture, Health, Business, Community)\n- **Tag-based Filtering**: Support for tag-based content organization\n- **Source Filtering**: Ability to filter by specific news sources\n- **LGBTQ+ Focus Filter**: Dedicated filtering for LGBTQ+-focused content\n\n## Session Management\n\nSimplified user experience without full authentication:\n\n- **Session-based Bookmarking**: Temporary session IDs for bookmark functionality\n- **No User Accounts**: Streamlined experience without registration requirements\n- **Client-side Session Generation**: Automatic session creation for feature access\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: PostgreSQL hosting service via `@neondatabase/serverless`\n- **Drizzle ORM**: Type-safe database toolkit for PostgreSQL operations\n\n## Content Sources\n- **NewsAPI**: External news aggregation service for broader content coverage\n- **RSS Feeds**: Various LGBTQ+ news sources and mainstream publications\n- **RSS Parser**: `rss-parser` library for feed processing\n\n## UI and Styling\n- **shadcn/ui**: Comprehensive React component library built on Radix UI\n- **Radix UI**: Low-level accessible UI primitives\n- **Tailwind CSS**: Utility-first CSS framework\n- **Lucide React**: Icon library for consistent iconography\n\n## Development and Build Tools\n- **Vite**: Fast build tool and development server\n- **TypeScript**: Type safety across the entire application\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **Replit Integration**: Development environment integration with error overlay and cartographer\n\n## Additional Services\n- **TanStack Query**: Server state management and caching\n- **Zod**: Runtime type validation and schema parsing\n- **date-fns**: Date manipulation and formatting utilities","size_bytes":6170},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/dummy-data.ts":{"content":"import { storage } from './storage';\nimport type { InsertArticle, InsertRssSource } from '@shared/schema';\n\nexport async function loadDummyData() {\n  console.log('Loading dummy data...');\n  \n  // Clear existing articles first\n  const allArticles = await storage.getArticles();\n  console.log(`Found ${allArticles.length} existing articles, clearing...`);\n\n  // Sample LGBTQ+ articles with diverse content\n  const dummyArticles: InsertArticle[] = [\n    {\n      title: \"Supreme Court Upholds Marriage Equality in Landmark Decision\",\n      excerpt: \"In a historic 6-3 ruling, the Supreme Court reinforced marriage equality protections, rejecting attempts to roll back LGBTQ+ rights.\",\n      content: \"The Supreme Court delivered a resounding victory for LGBTQ+ rights today, upholding marriage equality in a decisive 6-3 ruling. The case, which challenged existing protections, was met with overwhelming support from civil rights organizations nationwide. Justice Roberts, writing for the majority, emphasized that 'love is love' and constitutional protections apply to all Americans regardless of sexual orientation or gender identity.\",\n      url: \"https://example.com/supreme-court-marriage-equality\",\n      imageUrl: \"https://images.unsplash.com/photo-1589994965851-a8f479c573a9?w=800&q=80\",\n      category: \"politics\",\n      tags: [\"Supreme Court\", \"Marriage Equality\", \"Civil Rights\", \"Legal Victory\"],\n      author: \"Sarah Chen\",\n      source: \"Pride Legal News\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Pride Month Celebrations Draw Record Crowds Worldwide\",\n      excerpt: \"Cities across the globe report unprecedented attendance at Pride events, marking a significant milestone for LGBTQ+ visibility and acceptance.\",\n      content: \"Pride Month 2024 has shattered attendance records worldwide, with over 5 million people participating in celebrations across major cities. From New York's iconic parade to London's colorful festivities, the month has been marked by increased corporate sponsorship, political support, and community engagement. Organizers report that younger generations are driving much of the growth, with Gen Z and millennial participants making up over 60% of attendees.\",\n      url: \"https://example.com/pride-month-record-crowds\",\n      imageUrl: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=800&q=80\",\n      category: \"community\",\n      tags: [\"Pride Month\", \"Celebration\", \"Visibility\", \"Community\"],\n      author: \"Alex Rivera\",\n      source: \"Global Pride Network\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Breakthrough Study Shows Mental Health Benefits of Affirming Care\",\n      excerpt: \"New research from Johns Hopkins reveals significant mental health improvements among transgender youth receiving gender-affirming healthcare.\",\n      content: \"A comprehensive study published in the Journal of Medical Ethics demonstrates substantial mental health benefits for transgender youth receiving gender-affirming care. The five-year longitudinal study followed 2,000 participants and found dramatic reductions in depression, anxiety, and suicidal ideation among those with access to appropriate healthcare. Lead researcher Dr. Maria Santos emphasized that the findings underscore the critical importance of accessible, affirming medical care for transgender individuals.\",\n      url: \"https://example.com/gender-affirming-care-study\",\n      imageUrl: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?w=800&q=80\",\n      category: \"health\",\n      tags: [\"Mental Health\", \"Transgender\", \"Healthcare\", \"Research\", \"Youth\"],\n      author: \"Dr. Michael Thompson\",\n      source: \"Medical Pride Journal\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Major Tech Companies Announce Expanded LGBTQ+ Benefits\",\n      excerpt: \"Leading technology firms collectively announce comprehensive benefit packages specifically designed to support LGBTQ+ employees and their families.\",\n      content: \"In a coordinated announcement, major technology companies including Apple, Google, Microsoft, and Amazon unveiled expanded benefit packages for LGBTQ+ employees. The new benefits include comprehensive gender transition support, fertility assistance for same-sex couples, mental health resources, and extended family leave policies. The initiative, developed in partnership with LGBTQ+ advocacy groups, represents the largest corporate commitment to LGBTQ+ employee welfare in tech industry history.\",\n      url: \"https://example.com/tech-companies-lgbtq-benefits\",\n      imageUrl: \"https://images.unsplash.com/photo-1557804506-669a67965ba0?w=800&q=80\",\n      category: \"business\",\n      tags: [\"Technology\", \"Corporate Benefits\", \"Workplace Equality\", \"Employee Rights\"],\n      author: \"Jordan Kim\",\n      source: \"Tech Diversity Report\",\n      sourceType: \"newsapi\",\n      publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000), // 8 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Acclaimed Director Releases Groundbreaking LGBTQ+ Documentary\",\n      excerpt: \"Award-winning filmmaker Maria Santos premieres her latest documentary exploring the intersection of faith and LGBTQ+ identity in rural America.\",\n      content: \"Renowned director Maria Santos has released 'Faith and Love,' a powerful documentary that examines the experiences of LGBTQ+ individuals in religious communities across rural America. The film, which premiered at Sundance to standing ovations, features intimate portraits of families navigating the complex intersection of faith, tradition, and sexual identity. Critics are calling it a masterpiece of empathy and understanding that bridges divides and opens hearts.\",\n      url: \"https://example.com/faith-and-love-documentary\",\n      imageUrl: \"https://images.unsplash.com/photo-1489537235181-fc05daed5805?w=800&q=80\",\n      category: \"culture\",\n      tags: [\"Documentary\", \"Faith\", \"Rural America\", \"Film\", \"Sundance\"],\n      author: \"Elena Rodriguez\",\n      source: \"Independent Film Quarterly\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 10 * 60 * 60 * 1000), // 10 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Historic LGBTQ+ Community Center Opens in Small Town Mississippi\",\n      excerpt: \"The town of Jackson Creek, Mississippi, celebrates the opening of its first LGBTQ+ community center, marking a significant milestone for the region.\",\n      content: \"After three years of grassroots organizing and fundraising, Jackson Creek, Mississippi, has opened its first LGBTQ+ community center. The Rainbow Haven Center will provide support groups, educational resources, and safe spaces for LGBTQ+ individuals and allies in the rural Deep South. Local organizer Jamie Patterson expressed hope that the center will serve as a model for other small towns looking to create inclusive communities.\",\n      url: \"https://example.com/mississippi-lgbtq-center\",\n      imageUrl: \"https://images.unsplash.com/photo-1582213782179-e0d53f98f2ca?w=800&q=80\",\n      category: \"community\",\n      tags: [\"Community Center\", \"Mississippi\", \"Rural LGBTQ+\", \"Support\", \"Milestone\"],\n      author: \"Marcus Johnson\",\n      source: \"Southern Pride Network\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Olympic Committee Announces Inclusive Policies for Transgender Athletes\",\n      excerpt: \"The International Olympic Committee releases comprehensive guidelines ensuring fair and inclusive participation for transgender and intersex athletes.\",\n      content: \"The International Olympic Committee has unveiled new policies designed to create fair and inclusive competition for transgender and intersex athletes. The guidelines, developed in consultation with athletes, scientists, and LGBTQ+ advocates, emphasize individual assessment over blanket restrictions. IOC President Thomas Bach stated that the new policies reflect the organization's commitment to both competitive integrity and human dignity.\",\n      url: \"https://example.com/olympic-transgender-policy\",\n      imageUrl: \"https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=800&q=80\",\n      category: \"politics\",\n      tags: [\"Olympics\", \"Transgender Athletes\", \"Sports Policy\", \"Inclusion\", \"IOC\"],\n      author: \"Samantha Lee\",\n      source: \"Sports Equality Today\",\n      sourceType: \"newsapi\",\n      publishedAt: new Date(Date.now() - 14 * 60 * 60 * 1000), // 14 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Youth Mental Health Initiative Launches Nationwide LGBTQ+ Program\",\n      excerpt: \"The Trevor Project partners with schools nationwide to implement comprehensive mental health support specifically designed for LGBTQ+ students.\",\n      content: \"The Trevor Project has announced a groundbreaking partnership with school districts across the United States to implement specialized mental health programming for LGBTQ+ students. The initiative, called 'Safe Schools, Strong Minds,' will train counselors, create safe spaces, and provide crisis intervention resources. Early pilot programs have shown remarkable success in reducing bullying and improving overall student wellbeing.\",\n      url: \"https://example.com/trevor-project-schools-initiative\",\n      imageUrl: \"https://images.unsplash.com/photo-1497486751825-1233686d5d80?w=800&q=80\",\n      category: \"health\",\n      tags: [\"Mental Health\", \"Youth\", \"Schools\", \"Trevor Project\", \"Support\"],\n      author: \"Dr. Ashley Park\",\n      source: \"Youth Mental Health Today\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 16 * 60 * 60 * 1000), // 16 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Broadway's First Trans Lead Actor Makes History in New Musical\",\n      excerpt: \"Transgender performer Casey Williams becomes the first openly trans actor to lead a major Broadway production in the groundbreaking musical 'Becoming.'\",\n      content: \"Broadway history was made last night as Casey Williams took the stage as the lead in 'Becoming,' the first major Broadway musical to feature a transgender performer in the starring role. The show, which tells the story of a young person's journey of self-discovery and gender identity, has been praised by critics as both entertaining and deeply moving. Williams' powerful performance has drawn standing ovations and is already generating Tony Award buzz.\",\n      url: \"https://example.com/broadway-trans-lead-history\",\n      imageUrl: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=800&q=80\",\n      category: \"culture\",\n      tags: [\"Broadway\", \"Transgender\", \"Theater\", \"Representation\", \"Musical\"],\n      author: \"Theo Martinez\",\n      source: \"Theater Pride Weekly\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 18 * 60 * 60 * 1000), // 18 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Fortune 500 Company Diversity Report Shows Record LGBTQ+ Representation\",\n      excerpt: \"Annual corporate diversity data reveals significant progress in LGBTQ+ representation at executive levels across major American corporations.\",\n      content: \"The latest Fortune 500 diversity report shows unprecedented growth in LGBTQ+ representation at senior leadership levels, with a 40% increase from the previous year. Companies like Johnson & Johnson, IBM, and Salesforce are leading the way with comprehensive diversity initiatives and openly LGBTQ+ executives. The report credits employee resource groups, inclusive hiring practices, and cultural transformation efforts for driving meaningful change in corporate America.\",\n      url: \"https://example.com/fortune-500-lgbtq-representation\",\n      imageUrl: \"https://images.unsplash.com/photo-1521791136064-7986c2920216?w=800&q=80\",\n      category: \"business\",\n      tags: [\"Corporate Diversity\", \"Fortune 500\", \"Leadership\", \"Representation\", \"Workplace\"],\n      author: \"Morgan Davis\",\n      source: \"Business Equality Index\",\n      sourceType: \"newsapi\",\n      publishedAt: new Date(Date.now() - 20 * 60 * 60 * 1000), // 20 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"Historic Anti-Discrimination Law Passes in Conservative State\",\n      excerpt: \"Texas becomes the latest state to pass comprehensive LGBTQ+ anti-discrimination legislation, marking a significant shift in regional politics.\",\n      content: \"In a surprising bipartisan vote, Texas has passed the Equality in Employment Act, comprehensive legislation that prohibits discrimination based on sexual orientation and gender identity in employment, housing, and public accommodations. The bill, which passed with support from both Republican and Democratic lawmakers, represents a significant shift in the state's approach to LGBTQ+ rights and reflects changing public opinion across traditional conservative strongholds.\",\n      url: \"https://example.com/texas-anti-discrimination-law\",\n      imageUrl: \"https://images.unsplash.com/photo-1589994965851-a8f479c573a9?w=800&q=80\",\n      category: \"politics\",\n      tags: [\"Anti-Discrimination\", \"Texas\", \"Legislation\", \"Bipartisan\", \"Employment\"],\n      author: \"Jake Wilson\",\n      source: \"Political Progress Report\",\n      sourceType: \"rss\",\n      publishedAt: new Date(Date.now() - 22 * 60 * 60 * 1000), // 22 hours ago\n      isLgbtqFocused: true,\n    },\n    {\n      title: \"LGBTQ+ Startup Unicorn Reaches $1 Billion Valuation\",\n      excerpt: \"QueerTech, a platform connecting LGBTQ+ professionals and entrepreneurs, becomes the first LGBTQ+-founded company to reach unicorn status.\",\n      content: \"QueerTech, the professional networking platform for LGBTQ+ individuals, has achieved a $1 billion valuation in its latest funding round, making it the first openly LGBTQ+-founded company to reach unicorn status. Founded by married couple Sam Chen and Alex Rodriguez, the platform has grown to serve over 2 million users worldwide, connecting LGBTQ+ professionals, entrepreneurs, and allies. The company plans to use the funding to expand internationally and develop new mentorship programs.\",\n      url: \"https://example.com/queertech-unicorn-valuation\",\n      imageUrl: \"https://images.unsplash.com/photo-1552664730-d307ca884978?w=800&q=80\",\n      category: \"business\",\n      tags: [\"Startup\", \"Unicorn\", \"Technology\", \"Entrepreneurship\", \"Networking\"],\n      author: \"Riley Foster\",\n      source: \"Startup Pride Journal\",\n      sourceType: \"newsapi\",\n      publishedAt: new Date(Date.now() - 24 * 60 * 60 * 1000), // 1 day ago\n      isLgbtqFocused: true,\n    }\n  ];\n\n  // Create articles\n  let createdCount = 0;\n  for (const articleData of dummyArticles) {\n    try {\n      const createdArticle = await storage.createArticle(articleData);\n      createdCount++;\n      console.log(`Created article: ${createdArticle.title} (ID: ${createdArticle.id})`);\n    } catch (error) {\n      console.error(`Error creating article: ${articleData.title}`, error);\n    }\n  }\n\n  console.log(`Successfully created ${createdCount} dummy articles`);\n  \n  // Verify articles were created\n  const verificationArticles = await storage.getArticles();\n  console.log(`Verification: Storage now contains ${verificationArticles.length} total articles`);\n}","size_bytes":15564},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { rssService } from \"./services/rss-parser\";\nimport { newsApiService } from \"./services/news-api\";\nimport { scheduler } from \"./services/scheduler\";\nimport { searchParamsSchema, insertBookmarkSchema } from \"@shared/schema\";\nimport { loadDummyData } from \"./dummy-data\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Load dummy data automatically on startup\n  await loadDummyData();\n  \n  // Start the content aggregation scheduler\n  scheduler.start();\n\n  // Get articles with filtering and search\n  app.get(\"/api/articles\", async (req, res) => {\n    try {\n      const params = searchParamsSchema.parse({\n        query: req.query.query,\n        category: req.query.category,\n        tags: req.query.tags ? JSON.parse(req.query.tags as string) : undefined,\n        source: req.query.source,\n        lgbtqFocused: req.query.lgbtqFocused ? req.query.lgbtqFocused === 'true' : undefined,\n        limit: req.query.limit ? parseInt(req.query.limit as string) : 20,\n        offset: req.query.offset ? parseInt(req.query.offset as string) : 0,\n      });\n\n      let articles;\n      if (params.query) {\n        articles = await storage.searchArticles(params.query, params);\n      } else {\n        articles = await storage.getArticles(params);\n      }\n\n      res.json(articles);\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n      res.status(500).json({ message: \"Failed to fetch articles\" });\n    }\n  });\n\n  // Get single article\n  app.get(\"/api/articles/:id\", async (req, res) => {\n    try {\n      const article = await storage.getArticleById(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error fetching article:', error);\n      res.status(500).json({ message: \"Failed to fetch article\" });\n    }\n  });\n\n  // Like an article\n  app.post(\"/api/articles/:id/like\", async (req, res) => {\n    try {\n      const article = await storage.likeArticle(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error liking article:', error);\n      res.status(500).json({ message: \"Failed to like article\" });\n    }\n  });\n\n  // Get RSS sources\n  app.get(\"/api/sources\", async (req, res) => {\n    try {\n      const sources = await storage.getRssSources();\n      res.json(sources);\n    } catch (error) {\n      console.error('Error fetching sources:', error);\n      res.status(500).json({ message: \"Failed to fetch sources\" });\n    }\n  });\n\n  // Get categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      res.status(500).json({ message: \"Failed to fetch categories\" });\n    }\n  });\n\n  // Get bookmarks for session\n  app.get(\"/api/bookmarks\", async (req, res) => {\n    try {\n      const sessionId = req.query.sessionId as string;\n      if (!sessionId) {\n        return res.status(400).json({ message: \"Session ID required\" });\n      }\n      \n      const bookmarks = await storage.getBookmarksBySession(sessionId);\n      res.json(bookmarks);\n    } catch (error) {\n      console.error('Error fetching bookmarks:', error);\n      res.status(500).json({ message: \"Failed to fetch bookmarks\" });\n    }\n  });\n\n  // Create bookmark\n  app.post(\"/api/bookmarks\", async (req, res) => {\n    try {\n      const bookmarkData = insertBookmarkSchema.parse(req.body);\n      const bookmark = await storage.createBookmark(bookmarkData);\n      res.status(201).json(bookmark);\n    } catch (error) {\n      console.error('Error creating bookmark:', error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid bookmark data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create bookmark\" });\n    }\n  });\n\n  // Delete bookmark\n  app.delete(\"/api/bookmarks/:articleId\", async (req, res) => {\n    try {\n      const { articleId } = req.params;\n      const sessionId = req.query.sessionId as string;\n      \n      if (!sessionId) {\n        return res.status(400).json({ message: \"Session ID required\" });\n      }\n      \n      const deleted = await storage.deleteBookmark(articleId, sessionId);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Bookmark not found\" });\n      }\n      \n      res.status(204).send();\n    } catch (error) {\n      console.error('Error deleting bookmark:', error);\n      res.status(500).json({ message: \"Failed to delete bookmark\" });\n    }\n  });\n\n  // Manual content refresh endpoint\n  app.post(\"/api/refresh\", async (req, res) => {\n    try {\n      console.log('Manual content refresh triggered');\n      \n      // Trigger RSS fetch\n      rssService.fetchAllSources().catch(error => \n        console.error('RSS fetch error during manual refresh:', error)\n      );\n      \n      // Trigger NewsAPI fetch\n      newsApiService.fetchAndSave().catch(error => \n        console.error('NewsAPI fetch error during manual refresh:', error)\n      );\n      \n      res.json({ message: \"Content refresh triggered\" });\n    } catch (error) {\n      console.error('Error triggering refresh:', error);\n      res.status(500).json({ message: \"Failed to trigger refresh\" });\n    }\n  });\n\n  // Get trending tags\n  app.get(\"/api/trending-tags\", async (req, res) => {\n    try {\n      const articles = await storage.getArticles({ limit: 100, offset: 0 });\n      const tagCounts = new Map<string, number>();\n      \n      articles.forEach(article => {\n        article.tags.forEach(tag => {\n          tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);\n        });\n      });\n      \n      const trending = Array.from(tagCounts.entries())\n        .sort(([, a], [, b]) => b - a)\n        .slice(0, 10)\n        .map(([tag, count]) => ({ tag, count }));\n      \n      res.json(trending);\n    } catch (error) {\n      console.error('Error fetching trending tags:', error);\n      res.status(500).json({ message: \"Failed to fetch trending tags\" });\n    }\n  });\n\n  // Load dummy data endpoint\n  app.post(\"/api/load-dummy-data\", async (req, res) => {\n    try {\n      await loadDummyData();\n      res.json({ message: \"Dummy data loaded successfully\" });\n    } catch (error) {\n      console.error('Error loading dummy data:', error);\n      res.status(500).json({ message: \"Failed to load dummy data\" });\n    }\n  });\n\n  // Admin endpoints for RSS source management\n  app.post(\"/api/sources\", async (req, res) => {\n    try {\n      const sourceData = req.body;\n      const source = await storage.createRssSource(sourceData);\n      res.status(201).json(source);\n    } catch (error) {\n      console.error('Error creating RSS source:', error);\n      res.status(500).json({ message: \"Failed to create RSS source\" });\n    }\n  });\n\n  app.delete(\"/api/sources/:id\", async (req, res) => {\n    try {\n      const deleted = await storage.deleteRssSource(req.params.id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"RSS source not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      console.error('Error deleting RSS source:', error);\n      res.status(500).json({ message: \"Failed to delete RSS source\" });\n    }\n  });\n\n  app.post(\"/api/sources/:id/refresh\", async (req, res) => {\n    try {\n      const sources = await storage.getRssSources();\n      const source = sources.find(s => s.id === req.params.id);\n      if (!source) {\n        return res.status(404).json({ message: \"RSS source not found\" });\n      }\n      \n      // Fetch articles from this specific source\n      const articles = await rssService.fetchFromSource(source);\n      for (const article of articles) {\n        await storage.createArticle(article);\n      }\n      \n      res.json({ message: `Fetched ${articles.length} new articles`, count: articles.length });\n    } catch (error) {\n      console.error('Error refreshing RSS feed:', error);\n      res.status(500).json({ message: \"Failed to refresh RSS feed\" });\n    }\n  });\n\n  // Category management endpoints\n  app.post(\"/api/categories\", async (req, res) => {\n    try {\n      const categoryData = req.body;\n      const category = await storage.createCategory(categoryData);\n      res.status(201).json(category);\n    } catch (error) {\n      console.error('Error creating category:', error);\n      res.status(500).json({ message: \"Failed to create category\" });\n    }\n  });\n\n  app.post(\"/api/categories/reorder\", async (req, res) => {\n    try {\n      const { categoryOrders } = req.body; // Array of {id, sortOrder}\n      for (const { id, sortOrder } of categoryOrders) {\n        await storage.updateCategory(id, { sortOrder });\n      }\n      res.json({ message: \"Categories reordered successfully\" });\n    } catch (error) {\n      console.error('Error reordering categories:', error);\n      res.status(500).json({ message: \"Failed to reorder categories\" });\n    }\n  });\n\n  app.delete(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const deleted = await storage.deleteCategory(req.params.id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Category not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      console.error('Error deleting category:', error);\n      res.status(500).json({ message: \"Failed to delete category\" });\n    }\n  });\n\n  app.patch(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const updated = await storage.updateCategory(req.params.id, req.body);\n      if (!updated) {\n        return res.status(404).json({ message: \"Category not found\" });\n      }\n      res.json(updated);\n    } catch (error) {\n      console.error('Error updating category:', error);\n      res.status(500).json({ message: \"Failed to update category\" });\n    }\n  });\n\n  // Article promotion endpoints\n  app.post(\"/api/articles/:id/promote\", async (req, res) => {\n    try {\n      const { rankScore } = req.body;\n      const article = await storage.promoteArticle(req.params.id, rankScore);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error promoting article:', error);\n      res.status(500).json({ message: \"Failed to promote article\" });\n    }\n  });\n\n  app.delete(\"/api/articles/:id/promote\", async (req, res) => {\n    try {\n      const article = await storage.unpromoteArticle(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error unpromoting article:', error);\n      res.status(500).json({ message: \"Failed to unpromote article\" });\n    }\n  });\n\n  // Article hiding endpoints\n  app.post(\"/api/articles/:id/hide\", async (req, res) => {\n    try {\n      const article = await storage.hideArticle(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error hiding article:', error);\n      res.status(500).json({ message: \"Failed to hide article\" });\n    }\n  });\n\n  app.delete(\"/api/articles/:id/hide\", async (req, res) => {\n    try {\n      const article = await storage.unhideArticle(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      console.error('Error unhiding article:', error);\n      res.status(500).json({ message: \"Failed to unhide article\" });\n    }\n  });\n\n  app.delete(\"/api/articles/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteArticle(req.params.id);\n      if (!success) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json({ success: true });\n    } catch (error) {\n      console.error('Error deleting article:', error);\n      res.status(500).json({ message: \"Failed to delete article\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":12382},"server/storage.ts":{"content":"import { type Article, type InsertArticle, type RssSource, type InsertRssSource, type Bookmark, type InsertBookmark, type Category, type InsertCategory, type SearchParams } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Articles\n  getArticles(params?: SearchParams): Promise<Article[]>;\n  getArticleById(id: string): Promise<Article | undefined>;\n  createArticle(article: InsertArticle): Promise<Article>;\n  updateArticle(id: string, updates: Partial<InsertArticle>): Promise<Article | undefined>;\n  deleteArticle(id: string): Promise<boolean>;\n  searchArticles(query: string, params?: SearchParams): Promise<Article[]>;\n  likeArticle(id: string): Promise<Article | undefined>;\n  promoteArticle(id: string, rankScore?: number): Promise<Article | undefined>;\n  unpromoteArticle(id: string): Promise<Article | undefined>;\n  hideArticle(id: string): Promise<Article | undefined>;\n  unhideArticle(id: string): Promise<Article | undefined>;\n  getAllArticles(includeHidden?: boolean): Promise<Article[]>;\n  \n  // RSS Sources\n  getRssSources(): Promise<RssSource[]>;\n  getActiveRssSources(): Promise<RssSource[]>;\n  createRssSource(source: InsertRssSource): Promise<RssSource>;\n  updateRssSource(id: string, updates: Partial<InsertRssSource>): Promise<RssSource | undefined>;\n  deleteRssSource(id: string): Promise<boolean>;\n  \n  // Bookmarks\n  getBookmarksBySession(sessionId: string): Promise<Bookmark[]>;\n  createBookmark(bookmark: InsertBookmark): Promise<Bookmark>;\n  deleteBookmark(articleId: string, sessionId: string): Promise<boolean>;\n  \n  // Categories\n  getCategories(): Promise<Category[]>;\n  createCategory(category: InsertCategory): Promise<Category>;\n  updateCategory(id: string, updates: Partial<InsertCategory>): Promise<Category | undefined>;\n  deleteCategory(id: string): Promise<boolean>;\n}\n\nexport class MemStorage implements IStorage {\n  private articles: Map<string, Article> = new Map();\n  private rssSources: Map<string, RssSource> = new Map();\n  private bookmarks: Map<string, Bookmark> = new Map();\n  private categories: Map<string, Category> = new Map();\n\n  constructor() {\n    this.initializeDefaultData();\n  }\n\n  private initializeDefaultData() {\n    // Initialize default categories\n    const defaultCategories = [\n      { name: \"All Stories\", slug: \"all\", description: \"All news stories\", isActive: true, sortOrder: 0 },\n      { name: \"Politics\", slug: \"politics\", description: \"Political news and updates\", isActive: true, sortOrder: 1 },\n      { name: \"Culture & Arts\", slug: \"culture\", description: \"Cultural events and artistic expression\", isActive: true, sortOrder: 2 },\n      { name: \"Health & Wellness\", slug: \"health\", description: \"Health and wellness information\", isActive: true, sortOrder: 3 },\n      { name: \"Business\", slug: \"business\", description: \"Business and economic news\", isActive: true, sortOrder: 4 },\n      { name: \"Community\", slug: \"community\", description: \"Community events and stories\", isActive: true, sortOrder: 5 },\n    ];\n\n    defaultCategories.forEach(cat => {\n      const id = randomUUID();\n      this.categories.set(id, { ...cat, id });\n    });\n\n    // Initialize default RSS sources\n    const defaultSources = [\n      { name: \"GLAAD Media\", url: \"https://glaad.org/feed/\", category: \"advocacy\", isActive: true, isLgbtqFocused: true },\n      { name: \"Out Magazine\", url: \"https://www.out.com/rss.xml\", category: \"culture\", isActive: true, isLgbtqFocused: true },\n      { name: \"Queerty\", url: \"https://www.queerty.com/feed\", category: \"news\", isActive: true, isLgbtqFocused: true },\n      { name: \"The Advocate\", url: \"https://www.advocate.com/rss.xml\", category: \"news\", isActive: true, isLgbtqFocused: true },\n    ];\n\n    defaultSources.forEach(source => {\n      const id = randomUUID();\n      this.rssSources.set(id, { ...source, id, lastFetched: null });\n    });\n  }\n\n  private createSearchVector(article: Article): string {\n    return `${article.title} ${article.excerpt} ${article.content} ${article.tags.join(' ')} ${article.author} ${article.category}`.toLowerCase();\n  }\n\n  async getArticles(params?: SearchParams): Promise<Article[]> {\n    console.log(`Getting articles: total in storage = ${this.articles.size}, params =`, params);\n    let articles = Array.from(this.articles.values());\n\n    // Filter out hidden articles from public view\n    articles = articles.filter(a => !a.isHidden);\n\n    if (params) {\n      if (params.category && params.category !== 'all') {\n        articles = articles.filter(a => a.category.toLowerCase() === params.category!.toLowerCase());\n      }\n      if (params.tags && params.tags.length > 0) {\n        articles = articles.filter(a => params.tags!.some(tag => a.tags.includes(tag)));\n      }\n      if (params.source) {\n        articles = articles.filter(a => a.source.toLowerCase().includes(params.source!.toLowerCase()));\n      }\n      if (params.lgbtqFocused !== undefined) {\n        articles = articles.filter(a => a.isLgbtqFocused === params.lgbtqFocused);\n      }\n    }\n\n    // Sort by promotion status and rank score first, then by publishedAt\n    articles.sort((a, b) => {\n      // Promoted articles first\n      if (a.isPromoted && !b.isPromoted) return -1;\n      if (!a.isPromoted && b.isPromoted) return 1;\n      \n      // If both promoted, sort by rank score (higher first)\n      if (a.isPromoted && b.isPromoted) {\n        if (a.rankScore !== b.rankScore) return b.rankScore - a.rankScore;\n      }\n      \n      // Then by publishedAt (newest first)\n      return new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime();\n    });\n\n    const offset = params?.offset || 0;\n    const limit = params?.limit || 20;\n    return articles.slice(offset, offset + limit);\n  }\n\n  async getArticleById(id: string): Promise<Article | undefined> {\n    return this.articles.get(id);\n  }\n\n  async createArticle(articleData: InsertArticle): Promise<Article> {\n    const id = randomUUID();\n    const article: Article = {\n      ...articleData,\n      imageUrl: articleData.imageUrl || null,\n      tags: articleData.tags || [],\n      isLgbtqFocused: articleData.isLgbtqFocused || false,\n      id,\n      createdAt: new Date(),\n      likes: 0,\n      isPromoted: false,\n      rankScore: 0,\n      promotedAt: null,\n      isHidden: false,\n      hiddenAt: null,\n      searchVector: '',\n    };\n    \n    article.searchVector = this.createSearchVector(article);\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async updateArticle(id: string, updates: Partial<InsertArticle>): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    const updatedArticle = { ...article, ...updates };\n    updatedArticle.searchVector = this.createSearchVector(updatedArticle);\n    this.articles.set(id, updatedArticle);\n    return updatedArticle;\n  }\n\n  async deleteArticle(id: string): Promise<boolean> {\n    return this.articles.delete(id);\n  }\n\n  async searchArticles(query: string, params?: SearchParams): Promise<Article[]> {\n    const searchTerms = query.toLowerCase().split(' ');\n    let articles = Array.from(this.articles.values());\n\n    // Filter out hidden articles from public search\n    articles = articles.filter(a => !a.isHidden);\n\n    // Filter by search terms\n    articles = articles.filter(article => {\n      const searchVector = article.searchVector || this.createSearchVector(article);\n      return searchTerms.every(term => searchVector.includes(term));\n    });\n\n    // Apply additional filters\n    if (params) {\n      if (params.category && params.category !== 'all') {\n        articles = articles.filter(a => a.category.toLowerCase() === params.category!.toLowerCase());\n      }\n      if (params.tags && params.tags.length > 0) {\n        articles = articles.filter(a => params.tags!.some(tag => a.tags.includes(tag)));\n      }\n      if (params.lgbtqFocused !== undefined) {\n        articles = articles.filter(a => a.isLgbtqFocused === params.lgbtqFocused);\n      }\n    }\n\n    // Sort by promotion status and rank score first, then by publishedAt\n    articles.sort((a, b) => {\n      // Promoted articles first\n      if (a.isPromoted && !b.isPromoted) return -1;\n      if (!a.isPromoted && b.isPromoted) return 1;\n      \n      // If both promoted, sort by rank score (higher first)\n      if (a.isPromoted && b.isPromoted) {\n        if (a.rankScore !== b.rankScore) return b.rankScore - a.rankScore;\n      }\n      \n      // Then by publishedAt (newest first)\n      return new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime();\n    });\n    \n    const offset = params?.offset || 0;\n    const limit = params?.limit || 20;\n    return articles.slice(offset, offset + limit);\n  }\n\n  async getAllArticles(includeHidden: boolean = false): Promise<Article[]> {\n    let articles = Array.from(this.articles.values());\n    \n    if (!includeHidden) {\n      articles = articles.filter(a => !a.isHidden);\n    }\n    \n    // Sort by promotion status and rank score first, then by publishedAt\n    articles.sort((a, b) => {\n      // Promoted articles first\n      if (a.isPromoted && !b.isPromoted) return -1;\n      if (!a.isPromoted && b.isPromoted) return 1;\n      \n      // If both promoted, sort by rank score (higher first)\n      if (a.isPromoted && b.isPromoted) {\n        if (a.rankScore !== b.rankScore) return b.rankScore - a.rankScore;\n      }\n      \n      // Then by publishedAt (newest first)\n      return new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime();\n    });\n    \n    return articles;\n  }\n\n  async likeArticle(id: string): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    article.likes += 1;\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async promoteArticle(id: string, rankScore: number = 100): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    article.isPromoted = true;\n    article.rankScore = rankScore;\n    article.promotedAt = new Date();\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async unpromoteArticle(id: string): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    article.isPromoted = false;\n    article.rankScore = 0;\n    article.promotedAt = null;\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async hideArticle(id: string): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    article.isHidden = true;\n    article.hiddenAt = new Date();\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async unhideArticle(id: string): Promise<Article | undefined> {\n    const article = this.articles.get(id);\n    if (!article) return undefined;\n\n    article.isHidden = false;\n    article.hiddenAt = null;\n    this.articles.set(id, article);\n    return article;\n  }\n\n  async getRssSources(): Promise<RssSource[]> {\n    return Array.from(this.rssSources.values());\n  }\n\n  async getActiveRssSources(): Promise<RssSource[]> {\n    return Array.from(this.rssSources.values()).filter(source => source.isActive);\n  }\n\n  async createRssSource(sourceData: InsertRssSource): Promise<RssSource> {\n    const id = randomUUID();\n    const source: RssSource = {\n      ...sourceData,\n      isActive: sourceData.isActive ?? true,\n      isLgbtqFocused: sourceData.isLgbtqFocused ?? false,\n      id,\n      lastFetched: null,\n    };\n    this.rssSources.set(id, source);\n    return source;\n  }\n\n  async updateRssSource(id: string, updates: Partial<InsertRssSource>): Promise<RssSource | undefined> {\n    const source = this.rssSources.get(id);\n    if (!source) return undefined;\n\n    const updatedSource = { ...source, ...updates };\n    this.rssSources.set(id, updatedSource);\n    return updatedSource;\n  }\n\n  async deleteRssSource(id: string): Promise<boolean> {\n    return this.rssSources.delete(id);\n  }\n\n  async getBookmarksBySession(sessionId: string): Promise<Bookmark[]> {\n    return Array.from(this.bookmarks.values()).filter(b => b.sessionId === sessionId);\n  }\n\n  async createBookmark(bookmarkData: InsertBookmark): Promise<Bookmark> {\n    const id = randomUUID();\n    const bookmark: Bookmark = {\n      ...bookmarkData,\n      id,\n      createdAt: new Date(),\n    };\n    this.bookmarks.set(id, bookmark);\n    return bookmark;\n  }\n\n  async deleteBookmark(articleId: string, sessionId: string): Promise<boolean> {\n    const bookmark = Array.from(this.bookmarks.values())\n      .find(b => b.articleId === articleId && b.sessionId === sessionId);\n    \n    if (bookmark) {\n      return this.bookmarks.delete(bookmark.id);\n    }\n    return false;\n  }\n\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values()).sort((a, b) => a.sortOrder - b.sortOrder);\n  }\n\n  async createCategory(categoryData: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    // Set sortOrder to highest + 1 if not provided\n    const maxSortOrder = Math.max(...Array.from(this.categories.values()).map(c => c.sortOrder));\n    const category: Category = {\n      ...categoryData,\n      isActive: categoryData.isActive ?? true,\n      description: categoryData.description ?? null,\n      sortOrder: categoryData.sortOrder ?? (maxSortOrder + 1),\n      id,\n    };\n    this.categories.set(id, category);\n    return category;\n  }\n\n  async updateCategory(id: string, updates: Partial<InsertCategory>): Promise<Category | undefined> {\n    // Find category by ID or name (for backwards compatibility)\n    let category = this.categories.get(id);\n    if (!category) {\n      // Try finding by name\n      category = Array.from(this.categories.values()).find(c => c.name === id);\n    }\n    if (!category) return undefined;\n\n    const updatedCategory = { ...category, ...updates };\n    this.categories.set(category.id, updatedCategory);\n    return updatedCategory;\n  }\n\n  async deleteCategory(id: string): Promise<boolean> {\n    // Find category by ID or name (for backwards compatibility)\n    let categoryId = id;\n    const category = Array.from(this.categories.values()).find(c => c.name === id || c.id === id);\n    if (category) {\n      categoryId = category.id;\n    }\n    \n    // Don't allow deleting the \"all\" category\n    const categoryToDelete = this.categories.get(categoryId);\n    if (categoryToDelete?.slug === 'all') {\n      return false;\n    }\n    \n    return this.categories.delete(categoryId);\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":14525},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, jsonb, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const articles = pgTable(\"articles\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  excerpt: text(\"excerpt\").notNull(),\n  content: text(\"content\").notNull(),\n  url: text(\"url\").notNull().unique(),\n  imageUrl: text(\"image_url\"),\n  category: text(\"category\").notNull(),\n  tags: text(\"tags\").array().notNull().default([]),\n  author: text(\"author\").notNull(),\n  source: text(\"source\").notNull(),\n  sourceType: text(\"source_type\").notNull(), // 'rss' | 'newsapi'\n  publishedAt: timestamp(\"published_at\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n  likes: integer(\"likes\").notNull().default(0),\n  isLgbtqFocused: boolean(\"is_lgbtq_focused\").notNull().default(false),\n  isPromoted: boolean(\"is_promoted\").notNull().default(false),\n  rankScore: integer(\"rank_score\").notNull().default(0),\n  promotedAt: timestamp(\"promoted_at\"),\n  isHidden: boolean(\"is_hidden\").notNull().default(false),\n  hiddenAt: timestamp(\"hidden_at\"),\n  searchVector: text(\"search_vector\"), // For full-text search indexing\n});\n\nexport const rssSources = pgTable(\"rss_sources\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  url: text(\"url\").notNull().unique(),\n  category: text(\"category\").notNull(),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  lastFetched: timestamp(\"last_fetched\"),\n  isLgbtqFocused: boolean(\"is_lgbtq_focused\").notNull().default(false),\n});\n\nexport const bookmarks = pgTable(\"bookmarks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  articleId: varchar(\"article_id\").notNull(),\n  sessionId: text(\"session_id\").notNull(), // Using session-based bookmarking\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n});\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull().unique(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  isActive: boolean(\"is_active\").notNull().default(true),\n  sortOrder: integer(\"sort_order\").notNull().default(0),\n});\n\n// Insert schemas\nexport const insertArticleSchema = createInsertSchema(articles).omit({\n  id: true,\n  createdAt: true,\n  likes: true,\n  isPromoted: true,\n  rankScore: true,\n  promotedAt: true,\n  isHidden: true,\n  hiddenAt: true,\n  searchVector: true,\n});\n\nexport const insertRssSourceSchema = createInsertSchema(rssSources).omit({\n  id: true,\n  lastFetched: true,\n});\n\nexport const insertBookmarkSchema = createInsertSchema(bookmarks).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n});\n\n// Types\nexport type Article = typeof articles.$inferSelect;\nexport type InsertArticle = z.infer<typeof insertArticleSchema>;\nexport type RssSource = typeof rssSources.$inferSelect;\nexport type InsertRssSource = z.infer<typeof insertRssSourceSchema>;\nexport type Bookmark = typeof bookmarks.$inferSelect;\nexport type InsertBookmark = z.infer<typeof insertBookmarkSchema>;\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\n\n// Search and filter types\nexport const searchParamsSchema = z.object({\n  query: z.string().optional(),\n  category: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  source: z.string().optional(),\n  lgbtqFocused: z.boolean().optional(),\n  limit: z.number().min(1).max(100).default(20),\n  offset: z.number().min(0).default(0),\n});\n\nexport type SearchParams = z.infer<typeof searchParamsSchema>;\n","size_bytes":3847},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport AdminPanel from \"@/pages/admin\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/admin\" component={AdminPanel} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":792},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(210 25% 7.8431%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(210 25% 7.8431%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(210 25% 7.8431%);\n  --primary: hsl(203.8863 88.2845% 53.1373%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(210 25% 7.8431%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(210 25% 7.8431%);\n  --accent: hsl(211.5789 51.3514% 92.7451%);\n  --accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Inter, Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  \n  /* Pride theme colors */\n  --pride-indigo: hsl(243.6 75.6% 62.7%);\n  --pride-pink: hsl(330.4 81.2% 60.4%);\n  --pride-emerald: hsl(158.1 64.4% 51.6%);\n  \n  /* Gray colors from design */\n  --gray-50: hsl(210 40% 98%);\n  --gray-100: hsl(210 40% 96%);\n  --gray-200: hsl(214 32% 91%);\n  --gray-300: hsl(213 27% 84%);\n  --gray-400: hsl(215 20% 65%);\n  --gray-500: hsl(215 16% 47%);\n  --gray-600: hsl(215 19% 35%);\n  --gray-700: hsl(215 25% 27%);\n  --gray-800: hsl(217 33% 17%);\n  --gray-900: hsl(222 84% 5%);\n  \n  /* Breaking News theme colors */\n  --crimson: #B00020;        /* urgent */\n  --ink-on-crimson: #ffffff;\n  \n  --subtle-bg: #FFF5F5;      /* calm alert */\n  --subtle-ink: #7F1D1D;\n  \n  --amber-bg: #FFFAEB;       /* developing */\n  --amber-ink: #7A4A00;\n  --amber-border: #FF8F00;\n  \n  --body-ink: #111827;\n  --radius: 12px;\n  --shadow: 0 6px 20px rgba(0,0,0,.10);\n}\n\n/* ===== Breaking News Components ===== */\n.breaking {\n  border-radius: var(--radius);\n  padding: 16px;\n  box-shadow: var(--shadow);\n}\n\n.pill {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: 700;\n  font-size: 0.75rem;\n  line-height: 1;\n  padding: 6px 10px;\n  border-radius: 999px;\n  letter-spacing: 0.02em;\n}\n\n.breaking-list {\n  margin: 12px 0 0;\n  padding: 0;\n  list-style: none;\n}\n\n.breaking-list li {\n  display: flex;\n  gap: 0.5rem;\n  align-items: flex-start;\n}\n\n.breaking-list a {\n  text-decoration: underline;\n  text-underline-offset: 2px;\n}\n\n.breaking-list time {\n  flex: 0 0 auto;\n  font-size: 0.75rem;\n  opacity: 0.85;\n  margin-top: 0.15rem;\n  width: 3.2rem; /* keeps times aligned */\n}\n\n/* ===== Breaking News Variants ===== */\n/* 1) Full-alert crimson */\n.breaking--crimson {\n  background: var(--crimson);\n  color: var(--ink-on-crimson);\n}\n\n.breaking--crimson .pill {\n  background: rgba(255, 255, 255, 0.15);\n  color: var(--ink-on-crimson);\n}\n\n.breaking--crimson a {\n  color: var(--ink-on-crimson);\n  text-decoration-color: rgba(255, 255, 255, 0.6);\n}\n\n.breaking--crimson a:hover {\n  text-decoration-color: #fff;\n}\n\n/* 2) Subtle alert */\n.breaking--subtle {\n  background: var(--subtle-bg);\n  color: var(--subtle-ink);\n  border-left: 4px solid var(--crimson);\n}\n\n.breaking--subtle .pill {\n  background: var(--crimson);\n  color: #fff;\n}\n\n.breaking--subtle a {\n  color: var(--crimson);\n}\n\n/* 3) Amber \"Developing\" */\n.breaking--amber {\n  background: var(--amber-bg);\n  color: var(--amber-ink);\n  border-left: 4px solid var(--amber-border);\n}\n\n.breaking--amber .pill {\n  background: var(--amber-border);\n  color: var(--body-ink);\n}\n\n.breaking--amber a {\n  color: var(--amber-ink);\n}\n\n/* Optional dark-mode polish */\n@media (prefers-color-scheme: dark) {\n  .breaking { \n    box-shadow: 0 10px 24px rgba(0,0,0,.45); \n  }\n  .breaking--subtle { \n    background: #2b1010; \n    color: #ffdcdc; \n  }\n  .breaking--amber { \n    background: #2b220c; \n    color: #ffe2a3; \n  }\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(203.7736 87.6033% 52.5490%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(210 25% 7.8431%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(228 9.8039% 10%);\n  --sidebar-foreground: hsl(0 0% 85.0980%);\n  --sidebar-primary: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(205.7143 70% 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --sidebar-border: hsl(205.7143 15.7895% 26.0784%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Inter, Open Sans, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-gray-50 text-foreground;\n    font-family: 'Inter', system-ui, sans-serif;\n  }\n}\n\n@layer utilities {\n  .pride-indigo {\n    color: var(--pride-indigo);\n  }\n  \n  .bg-pride-indigo {\n    background-color: var(--pride-indigo);\n  }\n  \n  .pride-pink {\n    color: var(--pride-pink);\n  }\n  \n  .bg-pride-pink {\n    background-color: var(--pride-pink);\n  }\n  \n  .pride-emerald {\n    color: var(--pride-emerald);\n  }\n  \n  .bg-pride-emerald {\n    background-color: var(--pride-emerald);\n  }\n  \n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n  \n  .line-clamp-3 {\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n}\n","size_bytes":7010},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"server/services/news-api.ts":{"content":"import { storage } from '../storage';\nimport { type InsertArticle } from '@shared/schema';\n\nexport class NewsApiService {\n  private apiKey: string;\n  private baseUrl = 'https://newsapi.org/v2';\n\n  constructor() {\n    this.apiKey = process.env.NEWS_API_KEY || process.env.NEWSAPI_KEY || '';\n    if (!this.apiKey) {\n      console.warn('NEWS_API_KEY not found in environment variables');\n    }\n  }\n\n  private lgbtqKeywords = [\n    'LGBTQ', 'LGBT', 'gay rights', 'transgender', 'pride', 'marriage equality',\n    'discrimination', 'sexual orientation', 'gender identity', 'queer', 'lesbian',\n    'bisexual', 'non-binary', 'GLAAD', 'Human Rights Campaign'\n  ];\n\n  private isLgbtqFocused(title: string, description: string): boolean {\n    const text = `${title} ${description}`.toLowerCase();\n    return this.lgbtqKeywords.some(keyword => text.includes(keyword.toLowerCase()));\n  }\n\n  private categorizeArticle(title: string, description: string): string {\n    const text = `${title} ${description}`.toLowerCase();\n    \n    if (['politics', 'government', 'election', 'congress', 'senate', 'legislation'].some(k => text.includes(k))) {\n      return 'politics';\n    }\n    if (['culture', 'art', 'entertainment', 'music', 'film', 'movie', 'book', 'festival'].some(k => text.includes(k))) {\n      return 'culture';\n    }\n    if (['health', 'medical', 'wellness', 'mental health', 'healthcare', 'hospital'].some(k => text.includes(k))) {\n      return 'health';\n    }\n    if (['business', 'corporate', 'company', 'economic', 'finance', 'market', 'startup'].some(k => text.includes(k))) {\n      return 'business';\n    }\n    if (['community', 'local', 'neighborhood', 'volunteer', 'charity', 'nonprofit'].some(k => text.includes(k))) {\n      return 'community';\n    }\n    \n    return 'news';\n  }\n\n  async fetchLgbtqNews(): Promise<InsertArticle[]> {\n    if (!this.apiKey) {\n      console.warn('NewsAPI key not available, skipping NewsAPI fetch');\n      return [];\n    }\n\n    const articles: InsertArticle[] = [];\n\n    try {\n      // Fetch articles with LGBTQ-related keywords\n      for (const keyword of this.lgbtqKeywords.slice(0, 5)) { // Limit API calls\n        const response = await fetch(\n          `${this.baseUrl}/everything?q=\"${keyword}\"&language=en&sortBy=publishedAt&pageSize=20`,\n          {\n            headers: {\n              'X-API-Key': this.apiKey,\n            },\n          }\n        );\n\n        if (!response.ok) {\n          console.error(`NewsAPI error for keyword \"${keyword}\": ${response.status} ${response.statusText}`);\n          continue;\n        }\n\n        const data = await response.json();\n        \n        if (!data.articles) continue;\n\n        for (const item of data.articles) {\n          if (!item.title || !item.url || item.title === '[Removed]') continue;\n\n          // Check if article already exists\n          const existingArticles = await storage.getArticles();\n          const exists = existingArticles.some(a => a.url === item.url);\n          if (exists) continue;\n\n          const isLgbtqFocused = this.isLgbtqFocused(item.title, item.description || '');\n          const category = this.categorizeArticle(item.title, item.description || '');\n\n          const article: InsertArticle = {\n            title: item.title,\n            excerpt: item.description || '',\n            content: item.content || item.description || '',\n            url: item.url,\n            imageUrl: item.urlToImage || undefined,\n            category,\n            tags: [keyword],\n            author: item.author || item.source?.name || 'NewsAPI',\n            source: item.source?.name || 'NewsAPI',\n            sourceType: 'newsapi',\n            publishedAt: new Date(item.publishedAt),\n            isLgbtqFocused,\n          };\n\n          articles.push(article);\n        }\n\n        // Add delay between API calls to respect rate limits\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      console.log(`Fetched ${articles.length} articles from NewsAPI`);\n      return articles;\n    } catch (error) {\n      console.error('Error fetching from NewsAPI:', error);\n      return [];\n    }\n  }\n\n  async saveArticles(articles: InsertArticle[]): Promise<void> {\n    for (const article of articles) {\n      try {\n        await storage.createArticle(article);\n      } catch (error) {\n        console.error(`Error saving NewsAPI article: ${article.title}`, error);\n      }\n    }\n  }\n\n  async fetchAndSave(): Promise<void> {\n    const articles = await this.fetchLgbtqNews();\n    await this.saveArticles(articles);\n  }\n}\n\nexport const newsApiService = new NewsApiService();\n","size_bytes":4587},"server/services/rss-parser.ts":{"content":"import Parser from 'rss-parser';\nimport { storage } from '../storage';\nimport { type InsertArticle, type RssSource } from '@shared/schema';\n\nconst parser = new Parser({\n  customFields: {\n    item: ['content:encoded', 'description', 'pubDate', 'guid']\n  }\n});\n\nexport class RssService {\n  private lgbtqKeywords = [\n    'lgbtq', 'lgbt', 'gay', 'lesbian', 'bisexual', 'transgender', 'trans', 'queer',\n    'pride', 'rainbow', 'marriage equality', 'discrimination', 'civil rights',\n    'coming out', 'gender identity', 'sexual orientation', 'drag', 'non-binary',\n    'glaad', 'human rights campaign', 'stonewall', 'pride parade', 'gay rights'\n  ];\n\n  private isLgbtqFocused(title: string, content: string, tags: string[] = []): boolean {\n    const text = `${title} ${content} ${tags.join(' ')}`.toLowerCase();\n    return this.lgbtqKeywords.some(keyword => text.includes(keyword));\n  }\n\n  private extractCategory(source: RssSource, tags: string[] = []): string {\n    if (tags.length > 0) {\n      const tag = tags[0].toLowerCase();\n      if (['politics', 'political', 'government'].some(p => tag.includes(p))) return 'politics';\n      if (['culture', 'art', 'entertainment', 'music', 'film'].some(c => tag.includes(c))) return 'culture';\n      if (['health', 'wellness', 'medical', 'mental'].some(h => tag.includes(h))) return 'health';\n      if (['business', 'economic', 'finance', 'corporate'].some(b => tag.includes(b))) return 'business';\n      if (['community', 'local', 'event', 'social'].some(c => tag.includes(c))) return 'community';\n    }\n    return source.category || 'news';\n  }\n\n  private cleanContent(content: string): string {\n    // Remove HTML tags and clean up content\n    let cleaned = content\n      .replace(/<[^>]*>/g, '')\n      .replace(/&nbsp;/g, ' ')\n      .replace(/&amp;/g, '&')\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&quot;/g, '\"')\n      .replace(/&apos;/g, \"'\")\n      .replace(/&ldquo;/g, '\"')\n      .replace(/&rdquo;/g, '\"')\n      .replace(/&lsquo;/g, \"'\")\n      .replace(/&rsquo;/g, \"'\")\n      .replace(/&mdash;/g, '—')\n      .replace(/&ndash;/g, '–')\n      .replace(/&hellip;/g, '…');\n    \n    // Decode numeric HTML entities like &#8220;, &#8221;, etc.\n    cleaned = cleaned.replace(/&#(\\d+);/g, (match, dec) => {\n      return String.fromCharCode(parseInt(dec, 10));\n    });\n    \n    // Decode hexadecimal HTML entities like &#x201C;, &#x201D;, etc.\n    cleaned = cleaned.replace(/&#x([0-9A-Fa-f]+);/g, (match, hex) => {\n      return String.fromCharCode(parseInt(hex, 16));\n    });\n    \n    return cleaned\n      .trim()\n      .substring(0, 500); // Limit excerpt length\n  }\n\n  async fetchFromSource(source: RssSource): Promise<InsertArticle[]> {\n    try {\n      console.log(`Fetching RSS from: ${source.name} (${source.url})`);\n      const feed = await parser.parseURL(source.url);\n      const articles: InsertArticle[] = [];\n\n      if (!feed.items) {\n        console.warn(`No items found in RSS feed: ${source.name}`);\n        return articles;\n      }\n\n      for (const item of feed.items.slice(0, 20)) { // Limit to 20 most recent items\n        if (!item.title || !item.link) continue;\n\n        // Check if article already exists\n        const existingArticles = await storage.getArticles();\n        const exists = existingArticles.some(a => a.url === item.link);\n        if (exists) continue;\n\n        const content = item['content:encoded'] || item.content || item.description || '';\n        const cleanContent = this.cleanContent(content);\n        const excerpt = cleanContent.substring(0, 300) + (cleanContent.length > 300 ? '...' : '');\n        \n        const tags = item.categories || [];\n        const isLgbtqFocused = source.isLgbtqFocused || this.isLgbtqFocused(item.title, content, tags);\n        const category = this.extractCategory(source, tags);\n\n        const article: InsertArticle = {\n          title: item.title,\n          excerpt,\n          content: cleanContent,\n          url: item.link,\n          imageUrl: item.enclosure?.url || undefined,\n          category,\n          tags: tags.slice(0, 5), // Limit tags\n          author: (item as any).creator || (item as any).author || source.name,\n          source: source.name,\n          sourceType: 'rss',\n          publishedAt: item.pubDate ? new Date(item.pubDate) : new Date(),\n          isLgbtqFocused,\n        };\n\n        articles.push(article);\n      }\n\n      // Update last fetched timestamp - commented out for now as updateRssSource may not support lastFetched\n      // await storage.updateRssSource(source.id, { lastFetched: new Date() });\n      \n      console.log(`Fetched ${articles.length} new articles from ${source.name}`);\n      return articles;\n    } catch (error) {\n      console.error(`Error fetching RSS from ${source.name}:`, error);\n      return [];\n    }\n  }\n\n  async fetchAllSources(): Promise<void> {\n    try {\n      const sources = await storage.getActiveRssSources();\n      console.log(`Fetching from ${sources.length} RSS sources...`);\n\n      for (const source of sources) {\n        const articles = await this.fetchFromSource(source);\n        \n        for (const article of articles) {\n          try {\n            await storage.createArticle(article);\n          } catch (error) {\n            console.error(`Error saving article: ${article.title}`, error);\n          }\n        }\n      }\n\n      console.log('RSS fetch complete');\n    } catch (error) {\n      console.error('Error in fetchAllSources:', error);\n    }\n  }\n}\n\nexport const rssService = new RssService();\n","size_bytes":5526},"server/services/scheduler.ts":{"content":"import { rssService } from './rss-parser';\nimport { newsApiService } from './news-api';\n\nexport class SchedulerService {\n  private intervals: NodeJS.Timeout[] = [];\n\n  start(): void {\n    console.log('Starting content aggregation scheduler...');\n\n    // Fetch RSS feeds every 30 minutes\n    const rssInterval = setInterval(async () => {\n      console.log('Scheduled RSS fetch starting...');\n      await rssService.fetchAllSources();\n    }, 30 * 60 * 1000); // 30 minutes\n\n    // Fetch NewsAPI every 2 hours (to respect rate limits)\n    const newsApiInterval = setInterval(async () => {\n      console.log('Scheduled NewsAPI fetch starting...');\n      await newsApiService.fetchAndSave();\n    }, 2 * 60 * 60 * 1000); // 2 hours\n\n    this.intervals.push(rssInterval, newsApiInterval);\n\n    // Initial fetch on startup\n    setTimeout(async () => {\n      console.log('Initial content fetch starting...');\n      await rssService.fetchAllSources();\n      await newsApiService.fetchAndSave();\n    }, 5000); // Wait 5 seconds after startup\n  }\n\n  stop(): void {\n    console.log('Stopping scheduler...');\n    this.intervals.forEach(interval => clearInterval(interval));\n    this.intervals = [];\n  }\n}\n\nexport const scheduler = new SchedulerService();\n","size_bytes":1241},"client/src/components/article-card.tsx":{"content":"import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Heart, Bookmark, Share2 } from \"lucide-react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { decodeHtmlEntities } from \"@/lib/html-entities\";\nimport type { Article } from \"@shared/schema\";\n\ninterface ArticleCardProps {\n  article: Article;\n  sessionId: string;\n}\n\nexport default function ArticleCard({ article, sessionId }: ArticleCardProps) {\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: bookmarks = [] } = useQuery({\n    queryKey: [\"/api/bookmarks\", { sessionId }],\n  });\n\n  const isBookmarked = (bookmarks as any[]).some((b: any) => b.articleId === article.id);\n\n  const likeMutation = useMutation({\n    mutationFn: () => apiRequest(\"POST\", `/api/articles/${article.id}/like`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      toast({\n        title: \"Article liked!\",\n        description: \"Thank you for engaging with our content.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to like article. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const bookmarkMutation = useMutation({\n    mutationFn: () => {\n      if (isBookmarked) {\n        return apiRequest(\"DELETE\", `/api/bookmarks/${article.id}?sessionId=${sessionId}`);\n      } else {\n        return apiRequest(\"POST\", \"/api/bookmarks\", {\n          articleId: article.id,\n          sessionId,\n        });\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/bookmarks\"] });\n      toast({\n        title: isBookmarked ? \"Bookmark removed\" : \"Article bookmarked!\",\n        description: isBookmarked \n          ? \"Article removed from your bookmarks.\" \n          : \"Article saved to your bookmarks.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update bookmark. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const formatTimeAgo = (date: string | Date) => {\n    const now = new Date();\n    const articleDate = new Date(date);\n    const diffMs = now.getTime() - articleDate.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    \n    if (diffHours < 1) return \"Just now\";\n    if (diffHours < 24) return `${diffHours} hours ago`;\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffDays < 7) return `${diffDays} days ago`;\n    return articleDate.toLocaleDateString();\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category.toLowerCase()) {\n      case 'politics': return 'bg-blue-100 text-blue-800';\n      case 'culture': return 'bg-purple-100 text-purple-800';\n      case 'health': return 'bg-emerald-100 text-emerald-800';\n      case 'business': return 'bg-orange-100 text-orange-800';\n      case 'community': return 'bg-green-100 text-green-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const handleShare = async () => {\n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title: article.title,\n          text: article.excerpt,\n          url: article.url || window.location.href,\n        });\n      } catch (error) {\n        console.log(\"Share cancelled\");\n      }\n    } else {\n      // Fallback to clipboard\n      navigator.clipboard.writeText(article.url);\n      toast({\n        title: \"Link copied!\",\n        description: \"Article link has been copied to clipboard.\",\n      });\n    }\n  };\n\n  const handleArticleClick = () => {\n    window.open(article.url, '_blank', 'noopener,noreferrer');\n  };\n\n  return (\n    <article \n      className=\"bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow overflow-hidden cursor-pointer\"\n      data-testid={`card-article-${article.id}`}\n    >\n      {article.imageUrl && (\n        <img \n          src={article.imageUrl}\n          alt={article.title}\n          className=\"w-full h-48 object-cover\"\n          onClick={handleArticleClick}\n          data-testid={`img-article-${article.id}`}\n        />\n      )}\n      \n      <div className=\"p-6\">\n        <div className=\"flex items-center space-x-2 text-sm text-gray-500 mb-3 flex-wrap\">\n          <Badge \n            variant=\"secondary\" \n            className={getCategoryColor(article.category)}\n            data-testid={`badge-category-${article.id}`}\n          >\n            {article.category}\n          </Badge>\n          \n          <span>•</span>\n          <span data-testid={`text-time-${article.id}`}>\n            {formatTimeAgo(article.publishedAt)}\n          </span>\n          \n\n        </div>\n        \n        <h3 \n          className=\"text-xl font-bold text-gray-900 mb-3 line-clamp-2 hover:text-pride-indigo transition-colors\"\n          onClick={handleArticleClick}\n          data-testid={`text-title-${article.id}`}\n        >\n          {decodeHtmlEntities(article.title)}\n        </h3>\n        \n        <p \n          className=\"text-gray-600 mb-4 line-clamp-3\"\n          data-testid={`text-excerpt-${article.id}`}\n        >\n          {decodeHtmlEntities(article.excerpt)}\n        </p>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-6 h-6 bg-pride-indigo rounded-full flex items-center justify-center\">\n              <span className=\"text-xs font-bold text-white\">\n                {article.source ? article.source[0]?.toUpperCase() : \"?\"}\n              </span>\n            </div>\n            <span \n              className=\"text-sm text-gray-600\"\n              data-testid={`text-source-${article.id}`}\n            >\n              {article.source || \"Unknown Source\"}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center space-x-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => likeMutation.mutate()}\n              disabled={likeMutation.isPending}\n              className=\"text-gray-400 hover:text-pride-pink transition-colors text-sm\"\n              data-testid={`button-like-${article.id}`}\n            >\n              <Heart size={16} className={likeMutation.isPending ? \"animate-pulse\" : \"\"} />\n              <span className=\"ml-1\">{article.likes}</span>\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => bookmarkMutation.mutate()}\n              disabled={bookmarkMutation.isPending}\n              className={`transition-colors text-sm ${\n                isBookmarked \n                  ? \"text-pride-indigo\" \n                  : \"text-gray-400 hover:text-pride-indigo\"\n              }`}\n              data-testid={`button-bookmark-${article.id}`}\n            >\n              <Bookmark \n                size={16} \n                className={`${bookmarkMutation.isPending ? \"animate-pulse\" : \"\"} ${\n                  isBookmarked ? \"fill-current\" : \"\"\n                }`} \n              />\n            </Button>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleShare}\n              className=\"text-gray-400 hover:text-gray-600 transition-colors text-sm\"\n              data-testid={`button-share-${article.id}`}\n            >\n              <Share2 size={16} />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n","size_bytes":7662},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Heart, Mail, Shield, Info, Users, Rss } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white mt-16\">\n      {/* Mobile/App Footer - Simplified */}\n      <div className=\"md:hidden\">\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\n          <div className=\"flex flex-wrap justify-center gap-4 text-sm\">\n            <Link href=\"/\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-mobile-home\">\n              Home\n            </Link>\n            <Link href=\"/admin\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-mobile-admin\">\n              Admin\n            </Link>\n            <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-mobile-contact\">\n              Contact\n            </a>\n            <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-mobile-privacy\">\n              Privacy\n            </a>\n          </div>\n          <div className=\"text-center text-xs text-gray-400 mt-4\" data-testid=\"text-footer-mobile-copyright\">\n            © 2025 Rainbow Map News\n          </div>\n        </div>\n      </div>\n\n      {/* Desktop/Web Footer - Full Menu */}\n      <div className=\"hidden md:block\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {/* About Section */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold text-pride-pink\" data-testid=\"text-footer-about\">\n                About Rainbow Map News\n              </h3>\n              <p className=\"text-gray-300 text-sm\" data-testid=\"text-footer-description\">\n                Your trusted source for LGBTQ+ news from around the world. We aggregate stories that matter to our community.\n              </p>\n              <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\n                <Heart size={16} className=\"text-pride-pink\" />\n                <span data-testid=\"text-footer-tagline\">Made with pride for the community</span>\n              </div>\n            </div>\n\n            {/* Quick Links */}\n            <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-pride-yellow\" data-testid=\"text-footer-quicklinks\">\n              Quick Links\n            </h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-home\">\n                  Home\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/admin\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-admin\">\n                  Admin Dashboard\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors flex items-center gap-2\" data-testid=\"link-footer-rss\">\n                  <Rss size={14} />\n                  RSS Feeds\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors flex items-center gap-2\" data-testid=\"link-footer-newsletter\">\n                  <Mail size={14} />\n                  Newsletter\n                </a>\n              </li>\n            </ul>\n            </div>\n\n            {/* Community */}\n            <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-pride-green\" data-testid=\"text-footer-community\">\n              Community\n            </h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors flex items-center gap-2\" data-testid=\"link-footer-guidelines\">\n                  <Users size={14} />\n                  Community Guidelines\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-contact\">\n                  Contact Us\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-feedback\">\n                  Feedback\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-support\">\n                  Support\n                </a>\n              </li>\n            </ul>\n            </div>\n\n            {/* Legal */}\n            <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-pride-blue\" data-testid=\"text-footer-legal\">\n              Legal & Info\n            </h3>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors flex items-center gap-2\" data-testid=\"link-footer-privacy\">\n                  <Shield size={14} />\n                  Privacy Policy\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-terms\">\n                  Terms of Service\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors flex items-center gap-2\" data-testid=\"link-footer-about-page\">\n                  <Info size={14} />\n                  About This Platform\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-gray-300 hover:text-white transition-colors\" data-testid=\"link-footer-accessibility\">\n                  Accessibility\n                </a>\n              </li>\n            </ul>\n            </div>\n          </div>\n\n          {/* Bottom Bar */}\n          <div className=\"border-t border-gray-800 mt-8 pt-8\">\n            <div className=\"flex flex-col md:flex-row justify-between items-center\">\n              <div className=\"text-sm text-gray-400 mb-4 md:mb-0\" data-testid=\"text-footer-copyright\">\n                © 2025 Rainbow Map News. All rights reserved.\n              </div>\n              \n              {/* Social Links */}\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm text-gray-400\" data-testid=\"text-footer-follow\">Follow us:</span>\n                <div className=\"flex space-x-3\">\n                  <a href=\"#\" className=\"text-gray-400 hover:text-pride-pink transition-colors\" data-testid=\"link-footer-twitter\">\n                    <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                    </svg>\n                  </a>\n                  <a href=\"#\" className=\"text-gray-400 hover:text-pride-blue transition-colors\" data-testid=\"link-footer-facebook\">\n                    <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                    </svg>\n                  </a>\n                  <a href=\"#\" className=\"text-gray-400 hover:text-pride-purple transition-colors\" data-testid=\"link-footer-instagram\">\n                    <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987c6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.33-1.297C4.198 14.895 3.652 13.455 3.652 11.987c0-1.468.546-2.909 1.467-3.705c.882-.807 2.033-1.297 3.33-1.297s2.448.49 3.33 1.297c.921.796 1.467 2.237 1.467 3.705c0 1.468-.546 2.908-1.467 3.704c-.882.807-2.033 1.297-3.33 1.297zm7.119 0c-1.297 0-2.448-.49-3.33-1.297c-.921-.796-1.467-2.236-1.467-3.704c0-1.468.546-2.909 1.467-3.705c.882-.807 2.033-1.297 3.33-1.297s2.448.49 3.33 1.297c.921.796 1.467 2.237 1.467 3.705c0 1.468-.546 2.908-1.467 3.704c-.882.807-2.033 1.297-3.33 1.297z\"/>\n                    </svg>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":9199},"client/src/components/header.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, Menu, Settings } from \"lucide-react\";\n\nimport { Link } from \"wouter\";\nimport rmLogo from \"@assets/rm_logo01_1755105254709.webp\";\n\ninterface HeaderProps {\n  onSearch: (query: string) => void;\n  searchQuery: string;\n}\n\nexport default function Header({ onSearch, searchQuery }: HeaderProps) {\n  const [searchInput, setSearchInput] = useState(searchQuery);\n  const [showMobileSearch, setShowMobileSearch] = useState(false);\n\n\n\n\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch(searchInput);\n  };\n\n  const handleSearchInputChange = (value: string) => {\n    setSearchInput(value);\n    if (!value.trim()) {\n      onSearch(\"\");\n    }\n  };\n\n\n\n  return (\n    <header className=\"bg-white shadow-sm sticky top-0 z-50 border-b border-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\" className=\"flex items-center space-x-2 hover:opacity-80 transition-opacity cursor-pointer\" data-testid=\"link-home\">\n              <img \n                src={rmLogo} \n                alt=\"Rainbow Map News Logo\" \n                className=\"w-8 h-8\"\n                data-testid=\"img-logo\"\n              />\n              <span className=\"text-lg font-bold text-gray-900\" data-testid=\"text-logo\">\n                Rainbow Map News\n              </span>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-8\">\n          </nav>\n\n          {/* Search and User Menu */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Search Icon (Mobile) */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"md:hidden text-gray-600 hover:text-gray-900\"\n              onClick={() => setShowMobileSearch(!showMobileSearch)}\n              data-testid=\"button-mobile-search\"\n            >\n              <Search size={20} />\n            </Button>\n            \n            {/* Search Bar (Desktop) */}\n            <form onSubmit={handleSearch} className=\"hidden md:block\">\n              <div className=\"relative\">\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search articles...\"\n                  value={searchInput}\n                  onChange={(e) => handleSearchInputChange(e.target.value)}\n                  className=\"w-64 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pride-indigo focus:border-transparent\"\n                  data-testid=\"input-search-desktop\"\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-3 top-2.5 text-gray-400 hover:text-gray-600\"\n                  data-testid=\"button-search-desktop\"\n                >\n                  <Search size={16} />\n                </Button>\n              </div>\n            </form>\n\n            {/* Admin Link */}\n            <Link href=\"/admin\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"text-gray-600 hover:text-gray-900 hidden md:flex items-center gap-2\"\n                data-testid=\"button-admin\"\n              >\n                <Settings size={16} />\n                Admin\n              </Button>\n            </Link>\n\n\n\n            {/* Mobile Menu */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"md:hidden text-gray-600 hover:text-gray-900\"\n              data-testid=\"button-mobile-menu\"\n            >\n              <Menu size={20} />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Search Bar */}\n      {showMobileSearch && (\n        <div className=\"md:hidden px-4 pb-4 border-t border-gray-100\">\n          <form onSubmit={handleSearch}>\n            <div className=\"relative\">\n              <Input\n                type=\"text\"\n                placeholder=\"Search articles...\"\n                value={searchInput}\n                onChange={(e) => handleSearchInputChange(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pride-indigo focus:border-transparent\"\n                data-testid=\"input-search-mobile\"\n              />\n              <Button\n                type=\"submit\"\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"absolute right-3 top-2.5 text-gray-400 hover:text-gray-600\"\n                data-testid=\"button-search-mobile\"\n              >\n                <Search size={16} />\n              </Button>\n            </div>\n          </form>\n        </div>\n      )}\n    </header>\n  );\n}\n","size_bytes":4989},"client/src/components/hero-section.tsx":{"content":"import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Heart, Bookmark, Share2, Zap } from \"lucide-react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { decodeHtmlEntities } from \"@/lib/html-entities\";\nimport type { Article } from \"@shared/schema\";\n\ninterface HeroSectionProps {\n  article: Article;\n}\n\nexport default function HeroSection({ article }: HeroSectionProps) {\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: trendingTags = [] } = useQuery({\n    queryKey: [\"/api/trending-tags\"],\n  });\n\n  const likeMutation = useMutation({\n    mutationFn: () => apiRequest(\"POST\", `/api/articles/${article.id}/like`),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      toast({\n        title: \"Article liked!\",\n        description: \"Thank you for engaging with our content.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to like article. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const formatTimeAgo = (date: string | Date) => {\n    const now = new Date();\n    const articleDate = new Date(date);\n    const diffMs = now.getTime() - articleDate.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    \n    if (diffHours < 1) return \"Just now\";\n    if (diffHours < 24) return `${diffHours} hours ago`;\n    const diffDays = Math.floor(diffHours / 24);\n    if (diffDays < 7) return `${diffDays} days ago`;\n    return articleDate.toLocaleDateString();\n  };\n\n  const handleShare = async () => {\n    if (navigator.share) {\n      try {\n        await navigator.share({\n          title: article.title,\n          text: article.excerpt,\n          url: article.url || window.location.href,\n        });\n      } catch (error) {\n        console.log(\"Share cancelled\");\n      }\n    } else {\n      // Fallback to clipboard\n      navigator.clipboard.writeText(article.url);\n      toast({\n        title: \"Link copied!\",\n        description: \"Article link has been copied to clipboard.\",\n      });\n    }\n  };\n\n  return (\n    <section className=\"bg-white border-b border-gray-100\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Featured Article */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"relative\">\n              <Badge \n                className=\"bg-pride-pink text-white mb-4 hover:bg-pink-600\"\n                data-testid=\"badge-featured\"\n              >\n                Featured\n              </Badge>\n              \n              {article.imageUrl && (\n                <img \n                  src={article.imageUrl}\n                  alt={article.title}\n                  className=\"w-full h-72 sm:h-96 object-cover rounded-xl shadow-lg\"\n                  data-testid=\"img-featured-article\"\n                />\n              )}\n              \n              <div className=\"mt-6\">\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500 mb-2 flex-wrap\">\n                  <Badge \n                    variant=\"secondary\" \n                    className=\"bg-blue-100 text-blue-800\"\n                    data-testid=\"badge-category\"\n                  >\n                    {article.category}\n                  </Badge>\n                  \n                  {article.isLgbtqFocused && (\n                    <Badge \n                      variant=\"secondary\" \n                      className=\"bg-purple-100 text-purple-800\"\n                      data-testid=\"badge-lgbtq-focused\"\n                    >\n                      LGBTQ+ Focused\n                    </Badge>\n                  )}\n                  \n                  <span>•</span>\n                  <span data-testid=\"text-publish-time\">\n                    {formatTimeAgo(article.publishedAt)}\n                  </span>\n                </div>\n                \n                <h1 \n                  className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4 leading-tight\"\n                  data-testid=\"text-featured-title\"\n                >\n                  {decodeHtmlEntities(article.title)}\n                </h1>\n                \n                <p \n                  className=\"text-lg text-gray-600 mb-6 leading-relaxed\"\n                  data-testid=\"text-featured-excerpt\"\n                >\n                  {decodeHtmlEntities(article.excerpt)}\n                </p>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                      <span className=\"text-xs font-bold text-gray-600\">\n                        {article.author ? article.author[0]?.toUpperCase() : \"?\"}\n                      </span>\n                    </div>\n                    <div>\n                      <p \n                        className=\"text-sm font-medium text-gray-900\"\n                        data-testid=\"text-author\"\n                      >\n                        {article.author || \"Unknown Author\"}\n                      </p>\n                      <p \n                        className=\"text-xs text-gray-500\"\n                        data-testid=\"text-source\"\n                      >\n                        {article.source}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-4\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => likeMutation.mutate()}\n                      disabled={likeMutation.isPending}\n                      className=\"text-gray-400 hover:text-pride-pink transition-colors\"\n                      data-testid=\"button-like-article\"\n                    >\n                      <Heart size={20} className={likeMutation.isPending ? \"animate-pulse\" : \"\"} />\n                      <span className=\"ml-1\">{article.likes}</span>\n                    </Button>\n                    \n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"text-gray-400 hover:text-pride-indigo transition-colors\"\n                      data-testid=\"button-bookmark-article\"\n                    >\n                      <Bookmark size={20} />\n                    </Button>\n                    \n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={handleShare}\n                      className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                      data-testid=\"button-share-article\"\n                    >\n                      <Share2 size={20} />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Sidebar: Breaking & Trending */}\n          <div className=\"space-y-6\">\n            {/* Breaking News */}\n            <section className=\"bg-gray-100 border border-gray-200 rounded-xl p-6 shadow-sm\" role=\"region\" aria-label=\"Breaking News\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Zap className=\"text-red-500\" size={20} />\n                <h3 className=\"text-lg font-bold text-red-600\" data-testid=\"text-breaking-news-title\">\n                  Breaking News\n                </h3>\n              </div>\n              <div className=\"space-y-4\">\n                <div className=\"border-b border-gray-200 pb-4 last:border-b-0 last:pb-0\">\n                  <h4 className=\"font-semibold text-red-600 text-sm mb-2\">\n                    Supreme Court to Hear Landmark LGBTQ+ Case\n                  </h4>\n                  <p className=\"text-xs text-red-500\">15 minutes ago</p>\n                </div>\n                <div className=\"border-b border-gray-200 pb-4 last:border-b-0 last:pb-0\">\n                  <h4 className=\"font-semibold text-red-600 text-sm mb-2\">\n                    Major Company Announces Trans-Inclusive Policy\n                  </h4>\n                  <p className=\"text-xs text-red-500\">32 minutes ago</p>\n                </div>\n              </div>\n            </section>\n\n            {/* Trending Topics */}\n            <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-4\" data-testid=\"text-trending-title\">\n                Trending Topics\n              </h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {(trendingTags as any[]).slice(0, 6).map((item: any) => (\n                  <Badge\n                    key={item.tag}\n                    variant=\"secondary\"\n                    className=\"bg-pride-indigo/10 text-pride-indigo hover:bg-pride-indigo/20 transition-colors cursor-pointer\"\n                    data-testid={`badge-trending-${item.tag}`}\n                  >\n                    #{item.tag}\n                  </Badge>\n                ))}\n                \n                {/* Fallback trending tags if API doesn't return data */}\n                {(trendingTags as any[]).length === 0 && (\n                  <>\n                    <Badge className=\"bg-pride-indigo/10 text-pride-indigo\">#PrideMonth</Badge>\n                    <Badge className=\"bg-pride-pink/10 text-pride-pink\">#TransRights</Badge>\n                    <Badge className=\"bg-pride-emerald/10 text-pride-emerald\">#Equality</Badge>\n                    <Badge className=\"bg-purple-100 text-purple-700\">#LGBTQ+</Badge>\n                    <Badge className=\"bg-blue-100 text-blue-700\">#Pride2024</Badge>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10116},"client/src/components/sidebar.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface SidebarProps {\n  sessionId: string;\n}\n\nexport default function Sidebar({ sessionId }: SidebarProps) {\n  const [email, setEmail] = useState(\"\");\n  const { toast } = useToast();\n\n  const { data: sources = [] } = useQuery({\n    queryKey: [\"/api/sources\"],\n  });\n\n  const { data: trendingTags = [] } = useQuery({\n    queryKey: [\"/api/trending-tags\"],\n  });\n\n  const handleNewsletterSignup = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email.trim()) return;\n    \n    // Simulate newsletter signup\n    toast({\n      title: \"Thank you for subscribing!\",\n      description: \"You'll receive daily LGBTQ+ news updates.\",\n    });\n    setEmail(\"\");\n  };\n\n  const activeSources = (sources as any[]).filter((source: any) => source.isActive);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Newsletter Signup */}\n      <div className=\"bg-gradient-to-br from-pride-indigo to-pride-pink rounded-xl p-6 text-white\">\n        <h3 className=\"text-lg font-bold mb-2\" data-testid=\"text-newsletter-title\">\n          Stay Informed\n        </h3>\n        <p className=\"text-sm opacity-90 mb-4\">\n          Get daily LGBTQ+ news delivered to your inbox\n        </p>\n        <form onSubmit={handleNewsletterSignup} className=\"space-y-3\">\n          <Input\n            type=\"email\"\n            placeholder=\"Your email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full px-4 py-2 rounded-lg text-gray-900 placeholder-gray-500 focus:ring-2 focus:ring-white focus:ring-opacity-50\"\n            data-testid=\"input-newsletter-email\"\n          />\n          <Button\n            type=\"submit\"\n            className=\"w-full bg-white text-pride-indigo px-4 py-2 rounded-lg font-semibold hover:bg-gray-100 transition-colors\"\n            data-testid=\"button-newsletter-subscribe\"\n          >\n            Subscribe\n          </Button>\n        </form>\n      </div>\n\n      {/* Popular Tags */}\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 mb-4\" data-testid=\"text-popular-tags-title\">\n          Popular Tags\n        </h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {(trendingTags as any[]).slice(0, 8).map((item: any) => (\n            <Button\n              key={item.tag}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"bg-pride-indigo/10 text-pride-indigo px-3 py-1 rounded-full text-sm font-medium hover:bg-pride-indigo/20 transition-colors\"\n              data-testid={`button-tag-${item.tag}`}\n            >\n              #{item.tag}\n            </Button>\n          ))}\n          \n          {/* Fallback tags if API doesn't return data */}\n          {(trendingTags as any[]).length === 0 && (\n            <>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-pride-indigo/10 text-pride-indigo px-3 py-1 rounded-full text-sm font-medium hover:bg-pride-indigo/20 transition-colors\">\n                #TransRights\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-pride-pink/10 text-pride-pink px-3 py-1 rounded-full text-sm font-medium hover:bg-pride-pink/20 transition-colors\">\n                #Marriage\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-pride-emerald/10 text-pride-emerald px-3 py-1 rounded-full text-sm font-medium hover:bg-pride-emerald/20 transition-colors\">\n                #Workplace\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-purple-100 text-purple-700 px-3 py-1 rounded-full text-sm font-medium hover:bg-purple-200 transition-colors\">\n                #Youth\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm font-medium hover:bg-blue-200 transition-colors\">\n                #Health\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"bg-orange-100 text-orange-700 px-3 py-1 rounded-full text-sm font-medium hover:bg-orange-200 transition-colors\">\n                #Politics\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* RSS Sources */}\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 mb-4\" data-testid=\"text-sources-title\">\n          Our Sources\n        </h3>\n        <div className=\"space-y-3\">\n          {activeSources.map((source: any) => (\n            <div \n              key={source.id} \n              className=\"flex items-center justify-between\"\n              data-testid={`source-${source.id}`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span className=\"text-sm text-gray-700\">{source.name}</span>\n                {source.isLgbtqFocused && (\n                  <Badge variant=\"secondary\" className=\"text-xs bg-purple-100 text-purple-700\">\n                    LGBTQ+\n                  </Badge>\n                )}\n              </div>\n              <span className=\"text-xs text-gray-500\">Active</span>\n            </div>\n          ))}\n          \n          {/* Fallback sources if no data */}\n          {activeSources.length === 0 && (\n            <>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-700\">GLAAD Media</span>\n                </div>\n                <span className=\"text-xs text-gray-500\">Active</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-700\">Out Magazine</span>\n                </div>\n                <span className=\"text-xs text-gray-500\">Active</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-700\">Queerty</span>\n                </div>\n                <span className=\"text-xs text-gray-500\">Active</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-700\">NewsAPI</span>\n                </div>\n                <span className=\"text-xs text-gray-500\">Active</span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Featured Community */}\n      <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 mb-4\" data-testid=\"text-community-title\">\n          Community Spotlight\n        </h3>\n        <img \n          src=\"https://images.unsplash.com/photo-1529156069898-49953e39b3ac?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=200\"\n          alt=\"Diverse LGBTQ+ community group\"\n          className=\"w-full h-32 object-cover rounded-lg mb-3\"\n          data-testid=\"img-community-spotlight\"\n        />\n        <h4 className=\"font-semibold text-gray-900 mb-2\">\n          Pride Center Northwest\n        </h4>\n        <p className=\"text-sm text-gray-600 mb-3\">\n          Supporting LGBTQ+ individuals and families in the Pacific Northwest through advocacy, resources, and community.\n        </p>\n        <Button \n          variant=\"ghost\" \n          className=\"text-pride-indigo font-medium text-sm hover:underline p-0\"\n          data-testid=\"button-community-learn-more\"\n        >\n          Learn More →\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8359},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    let url = queryKey[0] as string;\n    \n    // Handle query parameters from the queryKey\n    if (queryKey.length > 1 && queryKey[1]) {\n      const params = queryKey[1] as Record<string, any>;\n      const searchParams = new URLSearchParams();\n      \n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          if (Array.isArray(value)) {\n            searchParams.set(key, JSON.stringify(value));\n          } else {\n            searchParams.set(key, String(value));\n          }\n        }\n      });\n      \n      const queryString = searchParams.toString();\n      if (queryString) {\n        url += `?${queryString}`;\n      }\n    }\n    \n    const res = await fetch(url, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":2052},"client/src/lib/search.ts":{"content":"import Fuse from 'fuse.js';\nimport type { Article } from '@shared/schema';\n\nexport interface SearchOptions {\n  threshold?: number;\n  includeScore?: boolean;\n  keys?: string[];\n}\n\nexport class ArticleSearchService {\n  private fuse: Fuse<Article> | null = null;\n  private articles: Article[] = [];\n\n  constructor(articles: Article[] = [], options: SearchOptions = {}) {\n    this.updateArticles(articles, options);\n  }\n\n  updateArticles(articles: Article[], options: SearchOptions = {}) {\n    this.articles = articles;\n    \n    const fuseOptions = {\n      threshold: options.threshold || 0.3, // Lower = more strict matching\n      includeScore: options.includeScore || true,\n      keys: options.keys || [\n        { name: 'title', weight: 0.4 },\n        { name: 'excerpt', weight: 0.3 },\n        { name: 'content', weight: 0.2 },\n        { name: 'tags', weight: 0.1 },\n        { name: 'author', weight: 0.05 },\n        { name: 'category', weight: 0.05 },\n      ],\n      // Advanced options for better search\n      ignoreLocation: true,\n      findAllMatches: true,\n      minMatchCharLength: 2,\n    };\n\n    this.fuse = new Fuse(articles, fuseOptions);\n  }\n\n  search(query: string, limit?: number): Article[] {\n    if (!this.fuse || !query.trim()) {\n      return this.articles.slice(0, limit || this.articles.length);\n    }\n\n    const results = this.fuse.search(query);\n    const articles = results.map(result => result.item);\n    \n    return limit ? articles.slice(0, limit) : articles;\n  }\n\n  searchWithScores(query: string, limit?: number): Array<{ article: Article; score: number }> {\n    if (!this.fuse || !query.trim()) {\n      return this.articles\n        .slice(0, limit || this.articles.length)\n        .map(article => ({ article, score: 0 }));\n    }\n\n    const results = this.fuse.search(query);\n    const articlesWithScores = results.map(result => ({\n      article: result.item,\n      score: result.score || 0,\n    }));\n    \n    return limit ? articlesWithScores.slice(0, limit) : articlesWithScores;\n  }\n\n  // Filter articles by category\n  filterByCategory(category: string): Article[] {\n    if (category === 'all' || !category) {\n      return this.articles;\n    }\n    return this.articles.filter(article => \n      article.category.toLowerCase() === category.toLowerCase()\n    );\n  }\n\n  // Filter articles by tags\n  filterByTags(tags: string[]): Article[] {\n    if (!tags || tags.length === 0) {\n      return this.articles;\n    }\n    return this.articles.filter(article => \n      tags.some(tag => article.tags.includes(tag))\n    );\n  }\n\n  // Filter LGBTQ+ focused articles\n  filterLgbtqFocused(lgbtqOnly: boolean = true): Article[] {\n    if (!lgbtqOnly) {\n      return this.articles;\n    }\n    return this.articles.filter(article => article.isLgbtqFocused);\n  }\n\n  // Advanced search with multiple filters\n  advancedSearch({\n    query,\n    category,\n    tags,\n    lgbtqFocused,\n    limit,\n  }: {\n    query?: string;\n    category?: string;\n    tags?: string[];\n    lgbtqFocused?: boolean;\n    limit?: number;\n  }): Article[] {\n    let results = this.articles;\n\n    // Apply text search first\n    if (query && query.trim()) {\n      results = this.search(query);\n    }\n\n    // Apply category filter\n    if (category && category !== 'all') {\n      results = results.filter(article => \n        article.category.toLowerCase() === category.toLowerCase()\n      );\n    }\n\n    // Apply tag filter\n    if (tags && tags.length > 0) {\n      results = results.filter(article => \n        tags.some(tag => article.tags.includes(tag))\n      );\n    }\n\n    // Apply LGBTQ+ filter\n    if (lgbtqFocused !== undefined) {\n      results = results.filter(article => article.isLgbtqFocused === lgbtqFocused);\n    }\n\n    return limit ? results.slice(0, limit) : results;\n  }\n\n  // Get trending tags from current articles\n  getTrendingTags(limit: number = 10): Array<{ tag: string; count: number }> {\n    const tagCounts = new Map<string, number>();\n    \n    this.articles.forEach(article => {\n      article.tags.forEach(tag => {\n        tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);\n      });\n    });\n    \n    return Array.from(tagCounts.entries())\n      .map(([tag, count]) => ({ tag, count }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, limit);\n  }\n\n  // Get suggested search terms based on article content\n  getSuggestions(query: string, limit: number = 5): string[] {\n    if (!query.trim()) return [];\n\n    const suggestions = new Set<string>();\n    const queryLower = query.toLowerCase();\n\n    // Collect suggestions from titles, tags, and categories\n    this.articles.forEach(article => {\n      // From titles\n      const titleWords = article.title.toLowerCase().split(/\\s+/);\n      titleWords.forEach(word => {\n        if (word.length > 3 && word.startsWith(queryLower)) {\n          suggestions.add(word);\n        }\n      });\n\n      // From tags\n      article.tags.forEach(tag => {\n        if (tag.toLowerCase().startsWith(queryLower)) {\n          suggestions.add(tag);\n        }\n      });\n\n      // From categories\n      if (article.category.toLowerCase().startsWith(queryLower)) {\n        suggestions.add(article.category);\n      }\n    });\n\n    return Array.from(suggestions).slice(0, limit);\n  }\n}\n\n// Export a default instance for convenience\nexport const searchService = new ArticleSearchService();\n","size_bytes":5308},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Trash2, Plus, RefreshCw, Settings, Rss, BarChart3, GripVertical, ArrowUp, ArrowDown, Star, TrendingUp, Edit, MoveUp, MoveDown, Target, EyeOff, Eye } from \"lucide-react\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport Footer from \"@/components/footer\";\nimport type { RssSource, Article } from \"@shared/schema\";\n\nexport default function AdminPanel() {\n  const { toast } = useToast();\n  const [newSource, setNewSource] = useState({\n    name: \"\",\n    url: \"\",\n    category: \"news\",\n    isLgbtqFocused: false,\n    isActive: true\n  });\n\n  const [newCategory, setNewCategory] = useState({\n    name: \"\",\n    slug: \"\",\n    description: \"\",\n    isActive: true,\n    sortOrder: 0\n  });\n  \n  // Advanced story placement controls\n  const [editingRank, setEditingRank] = useState<{ articleId: string; currentRank: number } | null>(null);\n  const [customRankScore, setCustomRankScore] = useState<number>(100);\n\n  // Queries\n  const { data: sources = [] } = useQuery<RssSource[]>({\n    queryKey: [\"/api/sources\"],\n  });\n\n  const { data: articles = [] } = useQuery<Article[]>({\n    queryKey: [\"/api/articles\", { limit: 100 }],\n  });\n\n  const { data: categories = [] } = useQuery<{name: string, slug: string, description: string | null, isActive: boolean, id: string, sortOrder: number}[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  // Mutations\n  const addSourceMutation = useMutation({\n    mutationFn: async (source: typeof newSource) => {\n      const response = await fetch(\"/api/sources\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(source),\n      });\n      if (!response.ok) throw new Error(\"Failed to add source\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"RSS source added successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/sources\"] });\n      setNewSource({ name: \"\", url: \"\", category: \"news\", isLgbtqFocused: false, isActive: true });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to add RSS source\", variant: \"destructive\" });\n    },\n  });\n\n  const deleteSourceMutation = useMutation({\n    mutationFn: async (sourceId: string) => {\n      const response = await fetch(`/api/sources/${sourceId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Failed to delete source\");\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"RSS source deleted successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/sources\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to delete RSS source\", variant: \"destructive\" });\n    },\n  });\n\n  const refreshFeedMutation = useMutation({\n    mutationFn: async (sourceId: string) => {\n      const response = await fetch(`/api/sources/${sourceId}/refresh`, {\n        method: \"POST\",\n      });\n      if (!response.ok) throw new Error(\"Failed to refresh feed\");\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Feed refreshed successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to refresh feed\", variant: \"destructive\" });\n    },\n  });\n\n  // Category mutations\n  const addCategoryMutation = useMutation({\n    mutationFn: async (category: typeof newCategory) => {\n      const response = await fetch(\"/api/categories\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(category),\n      });\n      if (!response.ok) throw new Error(\"Failed to add category\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Category added successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n      setNewCategory({ name: \"\", slug: \"\", description: \"\", isActive: true, sortOrder: 0 });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to add category\", variant: \"destructive\" });\n    },\n  });\n\n  const deleteCategoryMutation = useMutation({\n    mutationFn: async (categoryId: string) => {\n      const response = await fetch(`/api/categories/${categoryId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Failed to delete category\");\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Category deleted successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to delete category\", variant: \"destructive\" });\n    },\n  });\n\n  const toggleCategoryMutation = useMutation({\n    mutationFn: async ({ categoryId, isActive }: { categoryId: string, isActive: boolean }) => {\n      const response = await fetch(`/api/categories/${categoryId}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ isActive }),\n      });\n      if (!response.ok) throw new Error(\"Failed to update category\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Category updated successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to update category\", variant: \"destructive\" });\n    },\n  });\n\n  const handleAddSource = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newSource.name || !newSource.url) return;\n    addSourceMutation.mutate(newSource);\n  };\n\n  const handleAddCategory = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newCategory.name || !newCategory.slug) return;\n    addCategoryMutation.mutate(newCategory);\n  };\n\n  // Auto-generate slug from name\n  const handleCategoryNameChange = (name: string) => {\n    const slug = name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    setNewCategory({ ...newCategory, name, slug });\n  };\n\n  // Category reordering\n  const reorderCategoryMutation = useMutation({\n    mutationFn: async ({ categoryId, newSortOrder }: { categoryId: string, newSortOrder: number }) => {\n      const response = await fetch(`/api/categories/${categoryId}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ sortOrder: newSortOrder }),\n      });\n      if (!response.ok) throw new Error(\"Failed to reorder category\");\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/categories\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to reorder category\", variant: \"destructive\" });\n    },\n  });\n\n  const handleMoveCategory = (categoryId: string, direction: 'up' | 'down') => {\n    const sortedCategories = [...categories].sort((a, b) => a.sortOrder - b.sortOrder);\n    const currentIndex = sortedCategories.findIndex(c => c.id === categoryId);\n    \n    if (currentIndex === -1) return;\n    \n    if (direction === 'up' && currentIndex > 0) {\n      const targetCategory = sortedCategories[currentIndex - 1];\n      reorderCategoryMutation.mutate({ \n        categoryId: categoryId, \n        newSortOrder: targetCategory.sortOrder \n      });\n      reorderCategoryMutation.mutate({ \n        categoryId: targetCategory.id, \n        newSortOrder: sortedCategories[currentIndex].sortOrder \n      });\n    } else if (direction === 'down' && currentIndex < sortedCategories.length - 1) {\n      const targetCategory = sortedCategories[currentIndex + 1];\n      reorderCategoryMutation.mutate({ \n        categoryId: categoryId, \n        newSortOrder: targetCategory.sortOrder \n      });\n      reorderCategoryMutation.mutate({ \n        categoryId: targetCategory.id, \n        newSortOrder: sortedCategories[currentIndex].sortOrder \n      });\n    }\n  };\n\n  // Article promotion mutations\n  const promoteArticleMutation = useMutation({\n    mutationFn: async ({ articleId, rankScore }: { articleId: string, rankScore: number }) => {\n      const response = await fetch(`/api/articles/${articleId}/promote`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ rankScore }),\n      });\n      if (!response.ok) throw new Error(\"Failed to promote article\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article promoted successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to promote article\", variant: \"destructive\" });\n    },\n  });\n\n  const unpromoteArticleMutation = useMutation({\n    mutationFn: async (articleId: string) => {\n      const response = await fetch(`/api/articles/${articleId}/promote`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Failed to unpromote article\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article unpromoted successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to unpromote article\", variant: \"destructive\" });\n    },\n  });\n\n  // Advanced ranking controls\n  const updateRankMutation = useMutation({\n    mutationFn: async ({ articleId, rankScore }: { articleId: string, rankScore: number }) => {\n      const response = await fetch(`/api/articles/${articleId}/promote`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ rankScore }),\n      });\n      if (!response.ok) throw new Error(\"Failed to update rank\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article rank updated successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      setEditingRank(null);\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to update article rank\", variant: \"destructive\" });\n    },\n  });\n\n  const handleRankEdit = (articleId: string, currentRank: number) => {\n    setEditingRank({ articleId, currentRank });\n    setCustomRankScore(currentRank);\n  };\n\n  const handleRankUpdate = () => {\n    if (editingRank) {\n      updateRankMutation.mutate({ \n        articleId: editingRank.articleId, \n        rankScore: customRankScore \n      });\n    }\n  };\n\n  const quickRank = (articleId: string, score: number) => {\n    promoteArticleMutation.mutate({ articleId, rankScore: score });\n  };\n\n  // Story management mutations\n  const hideArticleMutation = useMutation({\n    mutationFn: async (articleId: string) => {\n      const response = await fetch(`/api/articles/${articleId}/hide`, {\n        method: \"POST\",\n      });\n      if (!response.ok) throw new Error(\"Failed to hide article\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article hidden successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to hide article\", variant: \"destructive\" });\n    },\n  });\n\n  const unhideArticleMutation = useMutation({\n    mutationFn: async (articleId: string) => {\n      const response = await fetch(`/api/articles/${articleId}/hide`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Failed to unhide article\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article unhidden successfully\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to unhide article\", variant: \"destructive\" });\n    },\n  });\n\n  const deleteArticleMutation = useMutation({\n    mutationFn: async (articleId: string) => {\n      const response = await fetch(`/api/articles/${articleId}`, {\n        method: \"DELETE\",\n      });\n      if (!response.ok) throw new Error(\"Failed to delete article\");\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"Article deleted permanently\" });\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n    },\n    onError: () => {\n      toast({ title: \"Error\", description: \"Failed to delete article\", variant: \"destructive\" });\n    },\n  });\n\n  // Get all articles including hidden ones for admin\n  const { data: allArticles = [] } = useQuery<Article[]>({\n    queryKey: [\"/api/articles\", { includeHidden: true }],\n    queryFn: () => fetch(\"/api/articles?includeHidden=true\").then(res => res.json()),\n  });\n\n  // Statistics\n  const stats = {\n    totalSources: sources.length,\n    activeSources: sources.filter(s => s.isActive).length,\n    totalArticles: articles.length,\n    lgbtqArticles: articles.filter(a => a.isLgbtqFocused).length,\n    categoryCounts: categories.map((cat) => ({\n      name: cat.name,\n      count: articles.filter(a => a.category === cat.slug).length\n    }))\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Settings className=\"h-6 w-6 text-pride-indigo\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">Admin Panel</h1>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Tabs defaultValue=\"overview\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-5\">\n            <TabsTrigger value=\"overview\" className=\"flex items-center gap-2\">\n              <BarChart3 size={16} />\n              Overview\n            </TabsTrigger>\n            <TabsTrigger value=\"sources\" className=\"flex items-center gap-2\">\n              <Rss size={16} />\n              RSS Sources\n            </TabsTrigger>\n            <TabsTrigger value=\"articles\" className=\"flex items-center gap-2\">\n              Articles\n            </TabsTrigger>\n            <TabsTrigger value=\"categories\" className=\"flex items-center gap-2\">\n              Categories\n            </TabsTrigger>\n            <TabsTrigger value=\"settings\" className=\"flex items-center gap-2\">\n              <Settings size={16} />\n              Settings\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Overview Tab */}\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Total Sources</CardTitle>\n                  <Rss className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.totalSources}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {stats.activeSources} active\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Total Articles</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.totalArticles}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {stats.lgbtqArticles} LGBTQ+ focused\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Categories</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{categories.length}</div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">LGBTQ+ Rate</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">\n                    {stats.totalArticles > 0 ? Math.round((stats.lgbtqArticles / stats.totalArticles) * 100) : 0}%\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Category Distribution</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {stats.categoryCounts.map((cat, index) => (\n                    <div key={index} className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">{cat.name}</span>\n                      <Badge variant=\"secondary\">{cat.count} articles</Badge>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* RSS Sources Tab */}\n          <TabsContent value=\"sources\" className=\"space-y-6\">\n            {/* Add New Source */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Plus size={20} />\n                  Add RSS Source\n                </CardTitle>\n                <CardDescription>\n                  Add a new RSS feed to aggregate content from\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleAddSource} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"name\">Source Name</Label>\n                      <Input\n                        id=\"name\"\n                        placeholder=\"e.g., Pink News\"\n                        value={newSource.name}\n                        onChange={(e) => setNewSource({ ...newSource, name: e.target.value })}\n                        data-testid=\"input-source-name\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"url\">RSS URL</Label>\n                      <Input\n                        id=\"url\"\n                        type=\"url\"\n                        placeholder=\"https://example.com/feed.xml\"\n                        value={newSource.url}\n                        onChange={(e) => setNewSource({ ...newSource, url: e.target.value })}\n                        data-testid=\"input-source-url\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"category\">Default Category</Label>\n                      <Select \n                        value={newSource.category} \n                        onValueChange={(value) => setNewSource({ ...newSource, category: value })}\n                      >\n                        <SelectTrigger data-testid=\"select-source-category\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"news\">News</SelectItem>\n                          <SelectItem value=\"politics\">Politics</SelectItem>\n                          <SelectItem value=\"culture\">Culture</SelectItem>\n                          <SelectItem value=\"health\">Health</SelectItem>\n                          <SelectItem value=\"business\">Business</SelectItem>\n                          <SelectItem value=\"community\">Community</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"lgbtq-focused\"\n                          checked={newSource.isLgbtqFocused}\n                          onCheckedChange={(checked) => setNewSource({ ...newSource, isLgbtqFocused: checked })}\n                          data-testid=\"switch-lgbtq-focused\"\n                        />\n                        <Label htmlFor=\"lgbtq-focused\">LGBTQ+ Focused Source</Label>\n                      </div>\n\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"active\"\n                          checked={newSource.isActive}\n                          onCheckedChange={(checked) => setNewSource({ ...newSource, isActive: checked })}\n                          data-testid=\"switch-active\"\n                        />\n                        <Label htmlFor=\"active\">Active</Label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    disabled={addSourceMutation.isPending}\n                    data-testid=\"button-add-source\"\n                  >\n                    {addSourceMutation.isPending ? \"Adding...\" : \"Add Source\"}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            {/* Sources List */}\n            <Card>\n              <CardHeader>\n                <CardTitle>RSS Sources</CardTitle>\n                <CardDescription>\n                  Manage your RSS feed sources\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {sources.map((source) => (\n                    <div key={source.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <h3 className=\"font-semibold\">{source.name}</h3>\n                          {source.isLgbtqFocused && (\n                            <Badge variant=\"secondary\">LGBTQ+ Focused</Badge>\n                          )}\n                          {!source.isActive && (\n                            <Badge variant=\"destructive\">Inactive</Badge>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-1\">{source.url}</p>\n                        <p className=\"text-xs text-gray-500\">Category: {source.category}</p>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => refreshFeedMutation.mutate(source.id)}\n                          disabled={refreshFeedMutation.isPending}\n                          data-testid={`button-refresh-${source.id}`}\n                        >\n                          <RefreshCw size={16} />\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => deleteSourceMutation.mutate(source.id)}\n                          disabled={deleteSourceMutation.isPending}\n                          data-testid={`button-delete-${source.id}`}\n                        >\n                          <Trash2 size={16} />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Articles Tab */}\n          <TabsContent value=\"articles\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Articles</CardTitle>\n                <CardDescription>\n                  Latest articles from all RSS sources\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {articles.slice(0, 10).map((article) => (\n                    <div key={article.id} className=\"p-4 border rounded-lg bg-white relative\">\n                      {article.isPromoted && (\n                        <div className=\"absolute top-2 right-2\">\n                          <Badge variant=\"default\" className=\"text-xs bg-yellow-500 text-black\">\n                            <Star size={12} className=\"mr-1\" />\n                            Promoted #{article.rankScore}\n                          </Badge>\n                        </div>\n                      )}\n                      \n                      <div className=\"flex items-start justify-between mb-2 pr-20\">\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-semibold text-sm mb-1\">{article.title}</h3>\n                          <p className=\"text-xs text-gray-600 mb-2\">{article.excerpt}</p>\n                          <div className=\"flex items-center gap-2 text-xs mb-2\">\n                            <Badge variant=\"outline\">{article.category}</Badge>\n                            <span className=\"text-gray-500\">{article.source}</span>\n                            {article.isLgbtqFocused && (\n                              <Badge variant=\"secondary\">LGBTQ+</Badge>\n                            )}\n                            <span className=\"text-gray-500\">\n                              {article.likes || 0} likes\n                            </span>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2 mt-3 flex-wrap\">\n                            {/* Quick Promotion Buttons */}\n                            {!article.isPromoted ? (\n                              <div className=\"flex items-center gap-1\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"default\"\n                                  onClick={() => quickRank(article.id, 500)}\n                                  disabled={promoteArticleMutation.isPending}\n                                  className=\"bg-red-600 hover:bg-red-700 text-xs px-2 py-1\"\n                                  data-testid={`button-urgent-${article.id}`}\n                                >\n                                  <Target size={12} className=\"mr-1\" />\n                                  Urgent\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"default\"\n                                  onClick={() => quickRank(article.id, 300)}\n                                  disabled={promoteArticleMutation.isPending}\n                                  className=\"bg-orange-600 hover:bg-orange-700 text-xs px-2 py-1\"\n                                  data-testid={`button-high-${article.id}`}\n                                >\n                                  <MoveUp size={12} className=\"mr-1\" />\n                                  High\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"default\"\n                                  onClick={() => quickRank(article.id, 100)}\n                                  disabled={promoteArticleMutation.isPending}\n                                  className=\"bg-blue-600 hover:bg-blue-700 text-xs px-2 py-1\"\n                                  data-testid={`button-featured-${article.id}`}\n                                >\n                                  <Star size={12} className=\"mr-1\" />\n                                  Featured\n                                </Button>\n                              </div>\n                            ) : (\n                              <div className=\"flex items-center gap-1\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => handleRankEdit(article.id, article.rankScore)}\n                                  disabled={updateRankMutation.isPending}\n                                  className=\"text-xs px-2 py-1\"\n                                  data-testid={`button-edit-rank-${article.id}`}\n                                >\n                                  <Edit size={12} className=\"mr-1\" />\n                                  Edit Rank\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => unpromoteArticleMutation.mutate(article.id)}\n                                  disabled={unpromoteArticleMutation.isPending}\n                                  className=\"text-xs px-2 py-1\"\n                                  data-testid={`button-unpromote-${article.id}`}\n                                >\n                                  <Star size={12} className=\"mr-1\" />\n                                  Unpromote\n                                </Button>\n                              </div>\n                            )}\n                            \n                            {/* Management Buttons */}\n                            <div className=\"flex items-center gap-1 ml-2\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => article.isHidden ? unhideArticleMutation.mutate(article.id) : hideArticleMutation.mutate(article.id)}\n                                disabled={hideArticleMutation.isPending || unhideArticleMutation.isPending}\n                                className=\"text-xs px-2 py-1\"\n                                data-testid={`button-toggle-visibility-${article.id}`}\n                              >\n                                {article.isHidden ? (\n                                  <>\n                                    <Eye size={12} className=\"mr-1\" />\n                                    Show\n                                  </>\n                                ) : (\n                                  <>\n                                    <EyeOff size={12} className=\"mr-1\" />\n                                    Hide\n                                  </>\n                                )}\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                onClick={() => {\n                                  if (window.confirm('Are you sure you want to permanently delete this article? This action cannot be undone.')) {\n                                    deleteArticleMutation.mutate(article.id);\n                                  }\n                                }}\n                                disabled={deleteArticleMutation.isPending}\n                                className=\"text-xs px-2 py-1\"\n                                data-testid={`button-delete-${article.id}`}\n                              >\n                                <Trash2 size={12} className=\"mr-1\" />\n                                Delete\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"text-xs text-gray-500 flex-shrink-0\">\n                          {new Date(article.publishedAt).toLocaleDateString()}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n            \n            {/* Custom Rank Editor Modal */}\n            {editingRank && (\n              <Card className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n                <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full mx-4\">\n                  <CardHeader className=\"pb-4\">\n                    <CardTitle>Edit Article Rank</CardTitle>\n                    <CardDescription>\n                      Set a custom rank score for precise story placement\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"rank-score\">Rank Score</Label>\n                      <Input\n                        id=\"rank-score\"\n                        type=\"number\"\n                        value={customRankScore}\n                        onChange={(e) => setCustomRankScore(Number(e.target.value))}\n                        min=\"1\"\n                        max=\"1000\"\n                        className=\"w-full\"\n                        data-testid=\"input-custom-rank\"\n                      />\n                      <div className=\"text-xs text-gray-500 space-y-1\">\n                        <div><strong>500+:</strong> Breaking News / Urgent</div>\n                        <div><strong>300-499:</strong> High Priority</div>\n                        <div><strong>100-299:</strong> Featured Stories</div>\n                        <div><strong>1-99:</strong> Standard Promoted</div>\n                      </div>\n                    </div>\n                    <div className=\"flex justify-end gap-2\">\n                      <Button\n                        variant=\"outline\"\n                        onClick={() => setEditingRank(null)}\n                        data-testid=\"button-cancel-rank\"\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        onClick={handleRankUpdate}\n                        disabled={updateRankMutation.isPending}\n                        data-testid=\"button-update-rank\"\n                      >\n                        {updateRankMutation.isPending ? \"Updating...\" : \"Update Rank\"}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </div>\n              </Card>\n            )}\n          </TabsContent>\n\n          {/* Categories Tab */}\n          <TabsContent value=\"categories\" className=\"space-y-6\">\n            {/* Add New Category */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Plus size={20} />\n                  Add Category\n                </CardTitle>\n                <CardDescription>\n                  Create a new category for organizing articles\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleAddCategory} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"category-name\">Category Name</Label>\n                      <Input\n                        id=\"category-name\"\n                        placeholder=\"e.g., Sports\"\n                        value={newCategory.name}\n                        onChange={(e) => handleCategoryNameChange(e.target.value)}\n                        data-testid=\"input-category-name\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"category-slug\">Category Slug</Label>\n                      <Input\n                        id=\"category-slug\"\n                        placeholder=\"e.g., sports\"\n                        value={newCategory.slug}\n                        onChange={(e) => setNewCategory({ ...newCategory, slug: e.target.value })}\n                        data-testid=\"input-category-slug\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2 md:col-span-2\">\n                      <Label htmlFor=\"category-description\">Description</Label>\n                      <Input\n                        id=\"category-description\"\n                        placeholder=\"Brief description of this category\"\n                        value={newCategory.description}\n                        onChange={(e) => setNewCategory({ ...newCategory, description: e.target.value })}\n                        data-testid=\"input-category-description\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"category-sort-order\">Sort Order</Label>\n                      <Input\n                        id=\"category-sort-order\"\n                        type=\"number\"\n                        placeholder=\"0\"\n                        value={newCategory.sortOrder}\n                        onChange={(e) => setNewCategory({ ...newCategory, sortOrder: parseInt(e.target.value) || 0 })}\n                        data-testid=\"input-category-sort-order\"\n                      />\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"category-active\"\n                        checked={newCategory.isActive}\n                        onCheckedChange={(checked) => setNewCategory({ ...newCategory, isActive: checked })}\n                        data-testid=\"switch-category-active\"\n                      />\n                      <Label htmlFor=\"category-active\">Active</Label>\n                    </div>\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    disabled={addCategoryMutation.isPending}\n                    data-testid=\"button-add-category\"\n                  >\n                    {addCategoryMutation.isPending ? \"Adding...\" : \"Add Category\"}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            {/* Categories List */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Categories</CardTitle>\n                <CardDescription>\n                  Manage your article categories\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {[...categories].sort((a, b) => a.sortOrder - b.sortOrder).map((category, index) => (\n                    <div key={category.name} className=\"flex items-center justify-between p-4 border rounded-lg bg-white\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"flex flex-col\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleMoveCategory(category.id, 'up')}\n                            disabled={index === 0 || reorderCategoryMutation.isPending}\n                            className=\"h-6 w-6 p-0 hover:bg-gray-100\"\n                            data-testid={`button-move-up-${category.slug}`}\n                          >\n                            <ArrowUp size={12} />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleMoveCategory(category.id, 'down')}\n                            disabled={index === categories.length - 1 || reorderCategoryMutation.isPending}\n                            className=\"h-6 w-6 p-0 hover:bg-gray-100\"\n                            data-testid={`button-move-down-${category.slug}`}\n                          >\n                            <ArrowDown size={12} />\n                          </Button>\n                        </div>\n                        \n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <span className=\"text-xs text-gray-400 font-mono w-6\">#{category.sortOrder}</span>\n                            <h3 className=\"font-semibold\">{category.name}</h3>\n                            {!category.isActive && (\n                              <Badge variant=\"destructive\">Inactive</Badge>\n                            )}\n                          </div>\n                          <p className=\"text-sm text-gray-600 mb-1\">Slug: {category.slug}</p>\n                          {category.description && (\n                            <p className=\"text-xs text-gray-500\">{category.description}</p>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center gap-2\">\n                        <Switch\n                          checked={category.isActive}\n                          onCheckedChange={(checked) => \n                            toggleCategoryMutation.mutate({ \n                              categoryId: category.name, // Using name as ID since categories don't expose ID\n                              isActive: checked \n                            })\n                          }\n                          disabled={toggleCategoryMutation.isPending}\n                          data-testid={`switch-category-${category.slug}`}\n                        />\n                        <Button\n                          size=\"sm\"\n                          variant=\"destructive\"\n                          onClick={() => deleteCategoryMutation.mutate(category.name)}\n                          disabled={deleteCategoryMutation.isPending || category.slug === 'all'}\n                          data-testid={`button-delete-category-${category.slug}`}\n                        >\n                          <Trash2 size={16} />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Settings Tab */}\n          <TabsContent value=\"settings\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Story Management</CardTitle>\n                <CardDescription>\n                  Hide or permanently delete articles from your platform\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {allArticles.map((article) => (\n                    <div key={article.id} className=\"p-4 border rounded-lg bg-white relative\">\n                      {/* Status Badges */}\n                      <div className=\"absolute top-2 right-2 flex gap-1\">\n                        {article.isPromoted && (\n                          <Badge variant=\"default\" className=\"text-xs bg-yellow-500 text-black\">\n                            <Star size={12} className=\"mr-1\" />\n                            Promoted #{article.rankScore}\n                          </Badge>\n                        )}\n                        {article.isHidden && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">\n                            <EyeOff size={12} className=\"mr-1\" />\n                            Hidden\n                          </Badge>\n                        )}\n                      </div>\n                      \n                      <div className=\"flex items-start justify-between mb-2 pr-32\">\n                        <div className=\"flex-1\">\n                          <h3 className=\"font-semibold text-sm mb-1 line-clamp-2\">{article.title}</h3>\n                          <p className=\"text-xs text-gray-600 mb-2\">{article.excerpt}</p>\n                          <div className=\"flex items-center gap-2 text-xs mb-3\">\n                            <Badge variant=\"outline\">{article.category}</Badge>\n                            <span className=\"text-gray-500\">{article.source}</span>\n                            {article.isLgbtqFocused && (\n                              <Badge variant=\"secondary\">LGBTQ+</Badge>\n                            )}\n                            <span className=\"text-gray-500\">\n                              {article.likes || 0} likes\n                            </span>\n                          </div>\n                          \n                          {/* Action Buttons */}\n                          <div className=\"flex items-center gap-2\">\n                            {article.isHidden ? (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => unhideArticleMutation.mutate(article.id)}\n                                disabled={unhideArticleMutation.isPending}\n                                className=\"text-xs px-2 py-1\"\n                                data-testid={`button-unhide-${article.id}`}\n                              >\n                                <Eye size={12} className=\"mr-1\" />\n                                Unhide\n                              </Button>\n                            ) : (\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => hideArticleMutation.mutate(article.id)}\n                                disabled={hideArticleMutation.isPending}\n                                className=\"text-xs px-2 py-1\"\n                                data-testid={`button-hide-${article.id}`}\n                              >\n                                <EyeOff size={12} className=\"mr-1\" />\n                                Hide\n                              </Button>\n                            )}\n                            \n                            <Button\n                              size=\"sm\"\n                              variant=\"destructive\"\n                              onClick={() => {\n                                if (confirm(\"Are you sure you want to permanently delete this article? This action cannot be undone.\")) {\n                                  deleteArticleMutation.mutate(article.id);\n                                }\n                              }}\n                              disabled={deleteArticleMutation.isPending}\n                              className=\"text-xs px-2 py-1\"\n                              data-testid={`button-delete-${article.id}`}\n                            >\n                              <Trash2 size={12} className=\"mr-1\" />\n                              Delete\n                            </Button>\n                          </div>\n                        </div>\n                        \n                        <div className=\"text-xs text-gray-500 flex-shrink-0\">\n                          {new Date(article.publishedAt).toLocaleDateString()}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {allArticles.length === 0 && (\n                    <div className=\"text-center text-gray-500 py-8\">\n                      No articles available for management\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n      <Footer />\n    </div>\n  );\n}","size_bytes":48718},"client/src/pages/home.tsx":{"content":"import Header from \"@/components/header\";\nimport HeroSection from \"@/components/hero-section\";\nimport { Button } from \"@/components/ui/button\";\nimport ArticleCard from \"@/components/article-card\";\nimport Sidebar from \"@/components/sidebar\";\nimport Footer from \"@/components/footer\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState, useEffect } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport type { Article, SearchParams } from \"@shared/schema\";\n\nexport default function Home() {\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random()}`);\n\n  const pageSize = 20;\n\n  // Build search params\n  const searchParams: SearchParams = {\n    query: searchQuery || undefined,\n    category: selectedCategory !== \"all\" ? selectedCategory : undefined,\n    limit: pageSize,\n    offset: currentPage * pageSize,\n    // Don't filter by lgbtqFocused by default, show all articles\n  };\n\n  const { data: articles = [], isLoading, refetch } = useQuery<Article[]>({\n    queryKey: [\"/api/articles\", searchParams],\n    enabled: true,\n  });\n\n  const { data: categories = [] } = useQuery({\n    queryKey: [\"/api/categories\"],\n  });\n\n  // Reset page when filters change\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [selectedCategory, searchQuery]);\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  const handleCategoryChange = (category: string) => {\n    setSelectedCategory(category);\n  };\n\n  const loadMore = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n\n  const featuredArticle = articles.find(a => a.isLgbtqFocused) || articles[0];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        onSearch={handleSearch} \n        searchQuery={searchQuery}\n      />\n      \n      {/* Category Navigation */}\n      <section className=\"bg-white border-b border-gray-100 sticky top-16 z-40\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between py-4\">\n            <div className=\"flex items-center space-x-1 overflow-x-auto pb-2\">\n              {(categories as any[]).map((category: any) => (\n                <Button\n                  key={category.id}\n                  variant={selectedCategory === category.slug ? \"default\" : \"ghost\"}\n                  size=\"sm\"\n                  onClick={() => handleCategoryChange(category.slug)}\n                  className={`whitespace-nowrap ${\n                    selectedCategory === category.slug\n                      ? \"bg-pride-indigo text-white hover:bg-pride-indigo/90\"\n                      : \"text-gray-600 hover:text-gray-900\"\n                  }`}\n                  data-testid={`button-category-${category.slug}`}\n                >\n                  {category.name}\n                </Button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n      \n      {featuredArticle && (\n        <HeroSection article={featuredArticle} />\n      )}\n\n\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n          {/* Article Grid */}\n          <div className=\"lg:col-span-3\">\n            {isLoading && currentPage === 0 ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-pride-indigo\" />\n                <span className=\"ml-2 text-gray-600\">Loading articles...</span>\n              </div>\n            ) : articles.length === 0 ? (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-600\" data-testid=\"text-no-articles\">\n                  {searchQuery ? \"No articles found matching your search.\" : \"No articles available.\"}\n                </p>\n              </div>\n            ) : (\n              <>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n                  {articles.slice(1).map((article) => (\n                    <ArticleCard \n                      key={article.id} \n                      article={article} \n                      sessionId={sessionId}\n                    />\n                  ))}\n                </div>\n\n                {/* Load More Button */}\n                {articles.length >= pageSize && (\n                  <div className=\"text-center py-8\">\n                    <Button\n                      onClick={loadMore}\n                      disabled={isLoading}\n                      className=\"bg-pride-indigo text-white px-8 py-3 rounded-lg font-semibold hover:bg-indigo-700 transition-colors\"\n                      data-testid=\"button-load-more\"\n                    >\n                      {isLoading ? (\n                        <>\n                          <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                          Loading...\n                        </>\n                      ) : (\n                        \"Load More Articles\"\n                      )}\n                    </Button>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <Sidebar sessionId={sessionId} />\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":5503},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}